{"version":3,"sources":["utils/Constants.ts","utils/Utils.ts","authentication/SignUp.tsx","authentication/SignIn.tsx","leaderboard/Leaderboard.tsx","img/logo.svg","misc/Header.tsx","misc/BottomNav.tsx","leaderboard/LeaderboardPage.tsx","predictions/Team.tsx","predictions/Game.tsx","homepage/Homepage.tsx","predictions/Predictions.tsx","predictions/FixedGame.tsx","predictions/History.tsx","predictions/LiveGame.tsx","predictions/Admin.tsx","App.js","reportWebVitals.js","index.js"],"names":["PROXY","isTokenValid","jwt","getJWT","fetch","method","headers","then","res","json","success","dateToOrdinal","day","goTo","endpoint","parts","document","cookie","split","length","pop","shift","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","SignUp","classes","useState","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","isEmailValid","setIsEmailValid","successfulSingUp","setSuccessfulSignup","validToken","setValidToken","submitForm","test","String","toLowerCase","validateEmail","body","JSON","stringify","name","result","alert","useEffect","valid","to","Container","component","maxWidth","CssBaseline","className","Avatar","Grid","container","item","xs","sm","TextField","autoComplete","required","fullWidth","id","label","autoFocus","onChange","input","target","value","type","error","Button","onClick","render","history","push","Box","mt","SignIn","handleLogin","table","padding","StyledTableCell","withStyles","head","fontSize","TableCell","LeaderBoard","isLive","setIsLive","leaderboardData","setLeaderboardData","console","log","leaderboard","matches","TableContainer","Paper","Table","size","TableHead","TableRow","TableBody","map","row","index","score","scope","style","paddingRight","correct_results","correct_scores","logo","maxHeight","headerBar","marginBottom","position","top","zIndex","colorStrip","content","left","height","background","Header","src","alt","root","bottom","BottomNav","props","isAdmin","setIsAdmin","BottomNavigation","ignored","newValue","showLabels","BottomNavigationAction","icon","paddingTop","paddingBottom","LeaderboardPage","Fragment","team","textAlign","teamEmoji","teamName","Team","emoji","match","justifyContent","game","teaminput","dash","date","maringTop","verticalAlign","matchCard","borderRadius","Game","defaultWasSent","teamOneScore","setTeamOneScore","teamTwoScore","setTeamTwoScore","wasSent","setWasSent","handlePrediction","scoreOne","parseInt","scoreTwo","areBothScoresValid","isNaN","validateScores","team_one_pred","team_two_pred","matchid","penalty_winners","setTimeout","sendPrediction","getResponseGlow","border","boxShadow","getDate","match_date","hasPrediction","Card","kick_off_time","substring","team_one","OutlinedInput","onBlur","team_two","homepage","fontTheme","createMuiTheme","typography","fontFamily","join","Homepage","ThemeProvider","Prediction","upcomingGames","gameContainer","setMatches","invalidResponse","setInvalidResponse","getMatches","element","prediction","callback","FixedGame","readOnly","renderUnpredictedScore","historyContainer","History","inProgressMatches","setInProgressMatches","LiveGame","team_one_goals","team_two_goals","sendScore","window","confirm","liveGames","AdminPage","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2f4cf3a3.chunk.js","sourcesContent":["export const PROXY = 'https://euro2020-back-end.herokuapp.com/'\nexport const SUCCESS = 'success'","import { PROXY } from './Constants'\n\nexport function isTokenValid(): Promise<boolean> {\n    const jwt = getJWT();\n    return fetch(PROXY + \"validateToken\", {\n        method: 'GET',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'Authenticate': jwt\n        }\n    }).then(res => res.json()).then(res => {\n        return res.success\n    })\n}\n\nexport function validateEmail(email: String): boolean {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n}\n\nexport function dateToOrdinal(day: number) {\n    if (day > 3 && day < 21) return 'th';\n    switch (day % 10) {\n        case 1:  return \"st\";\n        case 2:  return \"nd\";\n        case 3:  return \"rd\";\n        default: return \"th\";\n    }\n}\n\nexport function goTo(endpoint: string): string {\n    return PROXY + endpoint\n}\n\nexport function setJWT(jwt: string) {\n    document.cookie = \"jwt=\" + jwt;\n}\n\nexport function getJWT(): string {\n    const value = `; ${document.cookie}`;\n    const parts = value.split(`; ${'jwt'}=`);\n    if (parts.length === 2) {\n        const jwt = parts.pop()!.split(';').shift()\n        return (typeof jwt === 'undefined') ? '' : jwt;\n    }\n    return '';\n}\n\nexport function deleteJWT() {\n    document.cookie = '';\n}","import React, { useEffect, useState } from 'react';\nimport { Redirect, Route } from 'react-router-dom'\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { goTo, isTokenValid, validateEmail } from '../utils/Utils';\nimport { SUCCESS } from '../utils/Constants';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignUp() {\n  const classes = useStyles();\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [isEmailValid, setIsEmailValid] = useState(true);\n  const [successfulSingUp, setSuccessfulSignup] = useState(false);\n  const [validToken, setValidToken] = useState(false);\n\n  useEffect(() => {\n    isTokenValid().then(valid => {\n      if (valid) {\n        setValidToken(true)\n      }\n    })\n  }, [setValidToken])\n\n  function submitForm() {\n    if (!validateEmail(email)) {\n      setIsEmailValid(false)\n      return\n    }\n\n    fetch(goTo('signup'), {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email: email,\n        password: password,\n        name: firstName + ' ' + lastName\n      })\n    })\n      .then(res => res.json())\n      .then(result => {\n        if (result[SUCCESS] === false) {\n          alert('error whilst signing up :(')\n        } else {\n          setSuccessfulSignup(true)\n        }\n      });\n  }\n\n  if (validToken) {\n    return (\n      <Redirect to={'/home'} />\n    )\n  }\n  else if (successfulSingUp) {\n    return (\n      <Redirect to={'/'} />\n    )\n  } else {\n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <div className={classes.form}>\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  autoComplete=\"fname\"\n                  name=\"firstName\"\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"firstName\"\n                  label=\"First Name\"\n                  autoFocus\n                  onChange={(input) => setFirstName(input.target.value)}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"lastName\"\n                  label=\"Last Name\"\n                  name=\"lastName\"\n                  autoComplete=\"lname\"\n                  onChange={(input) => setLastName(input.target.value)}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  type=\"email\"\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                  onChange={(input) => setEmail(input.target.value)}\n                  error={!isEmailValid}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"current-password\"\n                  onChange={(input) => setPassword(input.target.value)}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  name=\"confirmpassword\"\n                  label=\"Confirm Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"current-password\"\n                  onChange={(input) => setConfirmPassword(input.target.value)}\n                  error={password !== confirmPassword}\n                />\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={() => submitForm()}\n            >\n              Sign Up\n            </Button>\n            <Grid container>\n              <Grid item>\n                <Route render={({ history }: { history: any }) => (\n                  <Link onClick={() => { history.push('/') }} variant=\"body2\">\n                    Already have an account? Sign in\n                  </Link>\n                )} />\n              </Grid>\n            </Grid>\n          </div>\n        </div>\n        <Box mt={8}>\n          <Copyright />\n        </Box>\n      </Container>\n    );\n  }\n}","import React, { useEffect, useState } from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Link from '@material-ui/core/Link';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { goTo, isTokenValid, setJWT } from '../utils/Utils';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Ali Colver & Luke Ely\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignIn() {\n  const classes = useStyles();\n  const [email, setEmail] = useState({ value: '', error: false });\n  const [password, setPassword] = useState({ value: '', error: false });\n  const [validToken, setValidToken] = useState(false);\n\n  useEffect(() => {\n    isTokenValid().then(valid => {\n      if (valid) {\n        setValidToken(true)\n      }\n    })\n  }, [setValidToken])\n\n  const handleLogin = () => {\n    fetch(goTo('login'), {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email: email.value,\n        password: password.value\n      })\n    })\n      .then(res => res.json())\n      .then(result => {\n        if (result[\"error-message\"] === \"\") {\n          setJWT(result[\"token\"]);\n          setValidToken(true)\n        } else {\n          setPassword({ ...password, error: true });\n          setEmail({ ...email, error: true });\n        }\n      });\n  };\n\n  if (validToken) {\n    return (\n      <Redirect to={'/home'} />\n    )\n  } else {\n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <div className={classes.form}>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              type=\"email\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              onChange={(input) => setEmail({ ...email, value: input.target.value })}\n              error={email.error}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              onChange={(input) => setPassword({ ...password, value: input.target.value })}\n              error={password.error}\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={() => handleLogin()}\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item>\n                <Route render={({ history }: { history: any }) => (\n                  <Link onClick={() => { history.push('/signup') }} variant=\"body2\">\n                    {\"Don't have an account? Sign Up\"}\n                  </Link>\n                )} />\n              </Grid>\n            </Grid>\n          </div>\n        </div>\n        <Box mt={8}>\n          <Copyright />\n        </Box>\n      </Container>\n    );\n  }\n}","import React, { useState, useEffect } from 'react';\nimport { getJWT, goTo } from \"../utils/Utils\";\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\n\nconst useStyles = makeStyles({\n  table: {\n    padding: '5px'\n  },\n});\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: '#1caac9',\n    color: 'white',\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\n\ninterface leaderBoardRecord {\n  name: String,\n  correct_results: number,\n  correct_scores: number,\n  score: number\n}\n\nexport default function LeaderBoard() {\n  const classes = useStyles();\n  const [isLive, setIsLive] = useState(false);\n  const [leaderboardData, setLeaderboardData] = useState<leaderBoardRecord[]>([])\n\n  useEffect(() => {\n    fetch(goTo('leaderboard'), {\n      method: 'GET',\n      headers: {\n        'Authenticate': getJWT()\n      }\n    }).then(res => res.json()).then(res => {\n      if (res.success) {\n        console.log(res)\n        setLeaderboardData(res.leaderboard)\n      }\n    })\n\n    fetch(goTo('match/in-progress'), {\n      method: 'GET',\n      headers: {\n        'Authenticate': getJWT()\n      }\n    }).then(res => res.json()).then(res => {\n      if (res.success) {\n        setIsLive(res.matches.length > 0);\n      }\n    });\n\n  }, [setLeaderboardData])\n\n\n  function renderLive() {\n    if (isLive) {\n      return <FiberManualRecordIcon style={{ color: 'green', paddingRight: '3vw' }} />\n    } else {\n      return <></>\n    }\n  }\n\n  function getRows() {\n    return (leaderboardData.map((row, index) => (\n      <TableRow key={index}>\n        <TableCell>{index === 0 ? index + 1 : (leaderboardData[index - 1].score === row.score ? '=' : index + 1)}</TableCell>\n        <TableCell component=\"th\" scope=\"row\">\n          {row.name.split(' ')[0]}\n        </TableCell>\n        <TableCell align={'left'}>{renderLive()}</TableCell>\n        <TableCell>{row.correct_results}</TableCell>\n        <TableCell>{row.correct_scores}</TableCell>\n        <TableCell align=\"center\"><b>{row.score}</b></TableCell>\n      </TableRow>\n    )))\n  }\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} size=\"small\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell>#</StyledTableCell>\n            <StyledTableCell>Player</StyledTableCell>\n            <StyledTableCell></StyledTableCell>\n            <StyledTableCell>R</StyledTableCell>\n            <StyledTableCell>S</StyledTableCell>\n            <StyledTableCell align=\"center\"><b>Pts</b></StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {getRows()}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/logo.b61bf1d9.svg\";","import { makeStyles } from \"@material-ui/core\";\nimport logo from '../img/logo.svg'\n\nconst useStyles = makeStyles({\n  logo: {\n    maxHeight: '15vw'\n  },\n  headerBar: {\n    maxHeight: '15vw',\n    marginBottom: '5vw',\n    position: 'fixed',\n    width: '100%',\n    backgroundColor: 'white',\n    top: 0, \n    zIndex: 10\n  },\n  colorStrip: {\n    content: \"\",\n    position: 'absolute',\n    top: '100%',\n    left: '0',\n    width: '100%',\n    height: '4px',\n    background: 'linear-gradient(130deg,#ff7a18,#af002d 41.07%,#319197 76.05%)'\n  }\n});\n\nexport default function Header() {\n    const classes = useStyles()\n\n    return(\n        <div className={classes.headerBar}>\n          <img className={classes.logo} src={logo} alt={'euro logo'}/>\n          <div className={classes.colorStrip}/>\n        </div>\n    )\n}","import { BottomNavigation, BottomNavigationAction, makeStyles } from \"@material-ui/core\";\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport HistoryIcon from '@material-ui/icons/History';\nimport SportsSoccerIcon from '@material-ui/icons/SportsSoccer';\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\nimport { useEffect, useState } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { getJWT, goTo } from \"../utils/Utils\";\n\nconst useStyles = makeStyles({\n    root: {\n        width: '100vw',\n        position: 'fixed',\n        bottom: 0,\n        left: 0\n    },\n});\n\ninterface IBottomNavProps {\n    value: string\n}\n\nexport default function BottomNav(props: IBottomNavProps) {\n    const classes = useStyles()\n    const [isAdmin, setIsAdmin] = useState(false)\n\n    useEffect(() => {\n        fetch(goTo('is-admin'), {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authenticate\": getJWT()\n            }\n        })\n            .then(res => res.json())\n            .then(result => {\n                setIsAdmin(result.success)\n            });\n    }, [setIsAdmin])\n\n    function getAdminPage() {\n        return !isAdmin ?\n            <></> :\n            <BottomNavigationAction label=\"ADMIN\" value=\"/admin\" icon={<SupervisorAccountIcon />} />\n    }\n\n    return (\n        <Route render={({ history }: { history: any }) => (\n            <BottomNavigation\n                value={props.value}\n                onChange={(ignored, newValue) => {\n                    history.push(newValue)\n                }}\n                showLabels\n                className={classes.root}\n            >\n                <BottomNavigationAction label=\"Standings\" value=\"/standings\" icon={<BarChartIcon />} />\n                <BottomNavigationAction label=\"Predict\" value=\"/home\" icon={<SportsSoccerIcon />} />\n                <BottomNavigationAction label=\"History\" value=\"/history\" icon={<HistoryIcon />} />\n                {getAdminPage()}\n            </BottomNavigation>\n        )} />\n\n    )\n}","import LeaderBoard from \"./Leaderboard\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Header from \"../misc/Header\";\nimport BottomNav from \"../misc/BottomNav\";\n\nconst useStyles = makeStyles({\n    leaderboard: {\n      padding: '5px',\n      marginTop: '50px',\n      marginBottom: '10vw',\n      paddingTop: '5vw',\n      paddingBottom: '10vw'\n    }\n  });\n  \n\nexport default function LeaderboardPage() {\n    const classes = useStyles();\n\n    return(\n        <React.Fragment>\n          <Header/>\n            <div className={classes.leaderboard}>\n            <LeaderBoard/>                \n            </div>\n          <BottomNav value={'/standings'}/>\n        </React.Fragment>\n    )\n}","import { Box, makeStyles } from \"@material-ui/core\"\n\ninterface ITeamProps {\n    emoji: String,\n    name: String\n}\n\nconst useStyles = makeStyles({\n    team: {\n        textAlign: 'center',\n        width: '25vw'\n    },\n    teamEmoji: {\n        fontSize: '15vw'\n    },\n    teamName: {\n        fontSize: '4vw'\n    }\n})\n\nexport default function Team(props: ITeamProps) {\n    const classes = useStyles()\n\n    return (\n        <Box className={classes.team}>\n            <div className={classes.teamEmoji}>\n                {props.emoji}\n            </div>\n            <div className={classes.teamName}>\n                {props.name}\n            </div>\n        </Box>\n    )\n}","import { Box, Card, makeStyles, OutlinedInput } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { SUCCESS } from \"../utils/Constants\";\nimport { dateToOrdinal, getJWT, goTo } from \"../utils/Utils\";\nimport { IMatch } from \"./Predictions\";\nimport Team from \"./Team\";\n\nexport const useStyles = makeStyles({\n    match: {\n        width: '80vw',\n        margin: '0 auto',\n        display: 'flex',\n        justifyContent: 'space-between',\n        paddingBottom: '3vw'\n    },\n    game: {\n        width: '80vw',\n        margin: '0 auto',\n        display: 'flex',\n        justifyContent: 'space-between',\n        marginTop: '5vh',\n        position: 'relative'\n    },\n    teaminput: {\n        width: '50px',\n        height: '50px',\n        fontSize: '40px',\n        textAlign: 'center',\n        marginTop: '4vw'\n    },\n    dash: {\n        fontSize: '8vw',\n        marginTop: '4vw'\n    },\n    date: {\n        fontSize: '4vw',\n        marginBottom: '0.5vh',\n        maringTop: '0.5vh',\n        verticalAlign: 'center',\n        position: 'relative',\n        color: 'grey'\n    },\n    matchCard: {\n        marginBottom: '4vh',\n        textAlign: 'center',\n        borderRadius: '10px'\n    }\n})\n\ninterface IGameProps {\n    callback: () => void,\n    hasPrediction: boolean,\n    team_one_pred?: string,\n    team_two_pred?: string\n}\n\nexport default function Game(props: IMatch & IGameProps) {\n    const classes = useStyles()\n    const defaultWasSent = {success: false, error: false}\n    const [teamOneScore, setTeamOneScore] = useState({ score: '', error: false });\n    const [teamTwoScore, setTeamTwoScore] = useState({ score: '', error: false });\n    const [wasSent, setWasSent] = useState(defaultWasSent)\n\n    useEffect(() => {\n        if (props.hasPrediction) {\n            setTeamOneScore({\n                error: false,\n                score: props.team_one_pred!\n            })\n            setTeamTwoScore({\n                error: false,\n                score: props.team_two_pred!\n            })\n        }\n        setWasSent({success: false, error: false})\n    }, [props.hasPrediction, props.team_one_pred, props.team_two_pred])\n\n    function handlePrediction() {\n        const scoreOne = parseInt(teamOneScore.score)\n        const scoreTwo = parseInt(teamTwoScore.score)\n        var areBothScoresValid = validateScores(scoreOne, scoreTwo);\n\n        if (!areBothScoresValid) {\n            return\n        }\n\n        setTeamOneScore({...teamOneScore, error: false})\n        setTeamTwoScore({...teamTwoScore, error: false})\n\n        sendPrediction(scoreOne, scoreTwo);\n    }\n\n    function validateScores(scoreOne: number, scoreTwo: number) {\n        var areBothScoresValid = true;\n        if (isNaN(scoreOne)) {\n            setTeamOneScore({ ...teamOneScore, error: true });\n            areBothScoresValid = false;\n        }\n\n        if (isNaN(scoreTwo)) {\n            setTeamTwoScore({ ...teamTwoScore, error: true });\n            areBothScoresValid = false;\n        }\n\n        return areBothScoresValid;\n    }\n\n    function sendPrediction(scoreOne: number, scoreTwo: number) {\n        fetch(goTo('prediction'), {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Authenticate': getJWT()\n            },\n            body: JSON.stringify({\n                team_one_pred: scoreOne,\n                team_two_pred: scoreTwo,\n                matchid: props.match.matchid,\n                penalty_winners: null\n            })\n        })\n            .then(res => res.json())\n            .then(result => {\n                if (!result[SUCCESS]) {\n                    setWasSent({success: false, error: true})\n                } else {\n                    setWasSent({success: true, error: false})\n                }\n                setTimeout(function() {\n                    setWasSent(defaultWasSent);\n                }, 500)\n            });\n    }\n\n    function renderUnpredictedScore() {\n        return (\n            <>\n                <OutlinedInput\n                    className={classes.teaminput}\n                    style={getResponseGlow()}\n                    id=\"outlined-basic\"\n                    type=\"number\"\n                    value={teamOneScore.score}\n                    onChange={(input) => setTeamOneScore({ ...teamOneScore, score: input.target.value })}\n                    onBlur={() => handlePrediction()}\n                    error={teamOneScore.error} />\n                <OutlinedInput\n                    className={classes.teaminput}\n                    id=\"outlined-basic\"\n                    type=\"number\"\n                    style={getResponseGlow()}\n                    value={teamTwoScore.score}\n                    onChange={(input) => setTeamTwoScore({ ...teamTwoScore, score: input.target.value })}\n                    onBlur={() => handlePrediction()}\n                    error={teamTwoScore.error}\n                     />\n            </>\n        )\n    }\n\n    function getResponseGlow(): React.CSSProperties | undefined {\n        return wasSent.success ?\n            {\n                border: '1px solid rgb(86, 180, 89)',\n                boxShadow: '0px 1px 3px rgba(0, 0, 0, 0.05)inset, 0px 0px 8px rgba(82, 168, 100, 0.6)'\n            } : wasSent.error ? {\n                border: '1px solid rgb(199, 18, 49)',\n                boxShadow: '0px 1px 3px rgba(0, 0, 0, 0.05)inset, 0px 0px 8px rgba(160, 30, 60, 0.6)'\n            } : {};\n    }\n\n    function getDate(): string {\n       return props.match.match_date.split('-')[2]\n    }\n\n    return (\n        <Card className={classes.matchCard}>\n            <Box className={classes.date}>\n                {getDate() + dateToOrdinal(parseInt(getDate())) + ' ' + props.match.kick_off_time.substring(0, props.match.kick_off_time.length - 3)}\n            </Box>\n            <Box className={classes.match}>\n                <Box>\n                    <Team name={props.team_one.name} emoji={props.team_one.emoji} />\n                </Box>\n                {renderUnpredictedScore()}\n                <Box>\n                    <Team name={props.team_two.name} emoji={props.team_two.emoji} />\n                </Box>\n            </Box>\n        </Card>\n    )\n}","import { Container, createMuiTheme, makeStyles, ThemeProvider } from '@material-ui/core';\nimport React from 'react';\nimport BottomNav from '../misc/BottomNav';\nimport Header from '../misc/Header';\nimport Prediction from '../predictions/Predictions';\n\nconst useStyles = makeStyles({\n  logo: {\n    maxHeight: '15vw'\n  },\n  homepage: {\n    position: 'absolute',\n    top: '15vw',\n    left: 0,\n    width: '100%',\n    marginBottom: '30vw'\n  }\n});\n\nexport const fontTheme = createMuiTheme({\n  typography: {\n    fontFamily: [\n      'Source Sans Pro',\n      'sans-serif',\n    ].join(','),\n  },\n});\n\nfunction Homepage() {\n  const classes = useStyles();\n    return (\n      <ThemeProvider theme={fontTheme}>\n        <Header/>\n      <Container className={classes.homepage}>\n        <Prediction />\n      </Container>\n      <BottomNav value={'/home'}/>\n      </ThemeProvider>\n    )\n}\n\nexport default Homepage;","import Game from \"./Game\";\nimport { Container, makeStyles, ThemeProvider, Typography } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { getJWT, goTo } from \"../utils/Utils\";\nimport { Redirect } from \"react-router\";\nimport { fontTheme } from \"../homepage/Homepage\";\n\nconst useStyles = makeStyles({\n    upcomingGames: {\n        'fontSize': '8vw'\n    },\n    gameContainer: {\n        marginBottom: '19vw'\n    }\n})\n\nexport interface ITeam {\n    name: string,\n    emoji: string\n}\n\nexport interface IMatchDetails {\n    match_date: string,\n    kick_off_time: string,\n    is_knockout: boolean,\n    team_one_goals: string,\n    team_two_goals: string,\n    matchid: number\n}\n\nexport interface IPrediction {\n    team_one_pred: string,\n    team_two_pred: string,\n    predictionid: string\n}\n\nexport interface IMatch {\n    team_one: ITeam,\n    team_two: ITeam,\n    match: IMatchDetails,\n    hasPrediction: boolean,\n    prediction?: IPrediction\n}\n\nexport default function Prediction() {\n    const classes = useStyles()\n    const [matches, setMatches] = useState<IMatch[]>([])\n    const [invalidResponse, setInvalidResponse] = useState<boolean>(false)\n\n    useEffect(() => {\n        getMatches();\n    }, [setMatches])\n\n    if (invalidResponse) {\n        return (\n            <Redirect to={'/'} />\n        )\n    } else {\n        return (\n            <ThemeProvider theme={fontTheme}>\n            <Container className={classes.gameContainer}>\n                <Typography className={classes.upcomingGames}>Upcoming Games</Typography>\n                {matches.map(element => {\n                    if (element.hasPrediction && element.prediction) {\n                        return <Game {...element} callback={getMatches} team_one_pred={element.prediction.team_one_pred} team_two_pred={element.prediction.team_two_pred} />\n                    } else {\n                        return <Game {...element} callback={getMatches} />\n                    }\n                })}\n            </Container>\n            </ThemeProvider>\n        )\n    }\n\n    function getMatches() {\n        console.log('attempting fetch')\n        fetch(goTo('prediction-required'), {\n            method: 'GET',\n            headers: {\n                'Authenticate': getJWT()\n            }\n        }).then(res => res.json()).then(res => {\n            if (res.success) {\n                setMatches(res.matches);\n            } else {\n                setInvalidResponse(true);\n            }\n        });\n    }\n}","import { Box, Card, OutlinedInput } from \"@material-ui/core\";\nimport { dateToOrdinal } from \"../utils/Utils\";\nimport { useStyles } from \"./Game\";\nimport { IMatch } from \"./Predictions\";\nimport Team from \"./Team\";\n\nexport default function FixedGame(props: IMatch) {\n    const classes = useStyles()\n\n    function renderUnpredictedScore() {\n        return (\n            <>\n                <OutlinedInput\n                    className={classes.teaminput}\n                    id=\"outlined-basic\"\n                    type=\"number\"\n                    value={props.prediction?.team_one_pred}\n                    readOnly\n                    />\n                <OutlinedInput\n                    className={classes.teaminput}\n                    id=\"outlined-basic\"\n                    type=\"number\"\n                    value={props.prediction?.team_two_pred}\n                    readOnly\n                     />\n            </>\n        )\n    }\n\n    function getDate(): string {\n       return props.match.match_date.split('-')[2]\n    }\n\n    return (\n        <Card className={classes.matchCard}>\n            <Box className={classes.date}>\n                {getDate() + dateToOrdinal(parseInt(getDate())) + ' ' + props.match.kick_off_time.substring(0, props.match.kick_off_time.length - 3)}\n            </Box>\n            <Box className={classes.match}>\n                <Box>\n                    <Team name={props.team_one.name} emoji={props.team_one.emoji} />\n                </Box>\n                {renderUnpredictedScore()}\n                <Box>\n                    <Team name={props.team_two.name} emoji={props.team_two.emoji} />\n                </Box>\n            </Box>\n        </Card>\n    )\n}","import { Container, makeStyles, ThemeProvider, Typography } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { fontTheme } from \"../homepage/Homepage\";\nimport BottomNav from \"../misc/BottomNav\";\nimport Header from \"../misc/Header\";\nimport { goTo, getJWT } from \"../utils/Utils\";\nimport FixedGame from \"./FixedGame\";\nimport { IMatch } from \"./Predictions\";\n\nconst useStyles = makeStyles({\n    upcomingGames: {\n        fontSize: '8vw',\n        marginTop: '19vw'\n    },\n    historyContainer: {\n        marginBottom: '19vw'\n    }\n})\n\nexport default function History() {\n    const classes = useStyles()\n    const [matches, setMatches] = useState<IMatch[]>([])\n    const [inProgressMatches, setInProgressMatches] = useState<IMatch[]>([])\n    const [invalidResponse, setInvalidResponse] = useState<boolean>(false)\n\n    useEffect(() => {\n        getMatches();\n    }, [])\n\n    if (invalidResponse) {\n        return (\n            <Redirect to={'/'} />\n        )\n    } else {\n        return (\n            <ThemeProvider theme={fontTheme}>\n            <Header/>\n            <Container className={classes.historyContainer}>\n                <Typography className={classes.upcomingGames}>Your History</Typography>\n                { matches.map(element => { return (<FixedGame {...element}/>)})}\n                { inProgressMatches.map(element => { return (<FixedGame {...element}/>)})}\n            </Container>\n            <BottomNav value={'/history'}/>\n            </ThemeProvider>\n        )\n    }\n\n    function getMatches() {\n        fetch(goTo('match/ended'), {\n            method: 'GET',\n            headers: {\n                'Authenticate': getJWT()\n            }\n        }).then(res => res.json()).then(res => {\n            if (res.success) {\n                setMatches(res.matches)\n            } else {\n                setInvalidResponse(true);\n            }\n        });\n        fetch(goTo('match/in-progress'), {\n            method: 'GET',\n            headers: {\n                'Authenticate': getJWT()\n            }\n        }).then(res => res.json()).then(res => {\n            if (res.success) {\n                setInProgressMatches(res.matches)\n            } else {\n                setInvalidResponse(true);\n            }\n        });\n    }\n}","import { Box, Button, Card, OutlinedInput } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { SUCCESS } from \"../utils/Constants\";\nimport { dateToOrdinal, getJWT, goTo } from \"../utils/Utils\";\nimport { useStyles } from \"./Game\";\nimport { IMatch } from \"./Predictions\";\nimport Team from \"./Team\";\n\nexport default function LiveGame(props: IMatch) {\n    const classes = useStyles()\n    const defaultWasSent = {success: false, error: false}\n    const [teamOneScore, setTeamOneScore] = useState({ score: '', error: false });\n    const [teamTwoScore, setTeamTwoScore] = useState({ score: '', error: false });\n    const [wasSent, setWasSent] = useState(defaultWasSent)\n\n    useEffect(() => {\n            setTeamOneScore({\n                error: false,\n                score: props.match.team_one_goals\n            })\n            setTeamTwoScore({\n                error: false,\n                score: props.match.team_two_goals\n            })\n        setWasSent({success: false, error: false})\n    }, [props.match.team_one_goals, props.match.team_two_goals])\n\n    function handlePrediction() {\n        const scoreOne = parseInt(teamOneScore.score)\n        const scoreTwo = parseInt(teamTwoScore.score)\n        var areBothScoresValid = validateScores(scoreOne, scoreTwo);\n\n        if (!areBothScoresValid) {\n            return\n        }\n\n        setTeamOneScore({...teamOneScore, error: false})\n        setTeamTwoScore({...teamTwoScore, error: false})\n\n        sendScore(scoreOne, scoreTwo);\n    }\n\n    function sendScore(scoreOne: number, scoreTwo: number) {\n        fetch(goTo('score'), {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Authenticate': getJWT()\n            },\n            body: JSON.stringify({\n                team_one_goals: scoreOne,\n                team_two_goals: scoreTwo,\n                matchid: props.match.matchid\n            })\n        })\n            .then(res => res.json())\n            .then(result => {\n                if (!result[SUCCESS]) {\n                    alert('Error whilst updating scores, please try again');\n                }\n            });\n    }\n\n    function endGame() {\n        if (window.confirm('Are you sure the match is finished?')) {\n            fetch(goTo('match/end'), {\n                method: \"PUT\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    'Authenticate': getJWT()\n                },\n                body: JSON.stringify({\n                    matchid: props.match.matchid\n                })\n            })\n                .then(res => res.json())\n                .then(result => {\n                    if (!result[SUCCESS]) {\n                        alert('Error whilst updating scores, please try again')\n                    }\n                });\n        }\n    }\n\n    function validateScores(scoreOne: number, scoreTwo: number) {\n        var areBothScoresValid = true;\n        if (isNaN(scoreOne)) {\n            setTeamOneScore({ ...teamOneScore, error: true });\n            areBothScoresValid = false;\n        }\n\n        if (isNaN(scoreTwo)) {\n            setTeamTwoScore({ ...teamTwoScore, error: true });\n            areBothScoresValid = false;\n        }\n\n        return areBothScoresValid;\n    }\n\n    function renderUnpredictedScore() {\n        return (\n            <>\n                <OutlinedInput\n                    className={classes.teaminput}\n                    style={getResponseGlow()}\n                    id=\"outlined-basic\"\n                    type=\"number\"\n                    value={teamOneScore.score}\n                    onChange={(input) => setTeamOneScore({ ...teamOneScore, score: input.target.value })}\n                    onBlur={() => handlePrediction()}\n                    error={teamOneScore.error} />\n                <OutlinedInput\n                    className={classes.teaminput}\n                    id=\"outlined-basic\"\n                    type=\"number\"\n                    style={getResponseGlow()}\n                    value={teamTwoScore.score}\n                    onChange={(input) => setTeamTwoScore({ ...teamTwoScore, score: input.target.value })}\n                    onBlur={() => handlePrediction()}\n                    error={teamTwoScore.error}\n                     />\n            </>\n        )\n    }\n\n    function getResponseGlow(): React.CSSProperties | undefined {\n        return wasSent.success ?\n            {\n                border: '1px solid rgb(86, 180, 89)',\n                boxShadow: '0px 1px 3px rgba(0, 0, 0, 0.05)inset, 0px 0px 8px rgba(82, 168, 100, 0.6)'\n            } : wasSent.error ? {\n                border: '1px solid rgb(199, 18, 49)',\n                boxShadow: '0px 1px 3px rgba(0, 0, 0, 0.05)inset, 0px 0px 8px rgba(160, 30, 60, 0.6)'\n            } : {};\n    }\n\n    function getDate(): string {\n       return props.match.match_date.split('-')[2]\n    }\n\n    return (\n        <Card className={classes.matchCard}>\n            <Box className={classes.date}>\n                {getDate() + dateToOrdinal(parseInt(getDate())) + ' ' + props.match.kick_off_time.substring(0, props.match.kick_off_time.length - 3)}\n            </Box>\n            <Box className={classes.match}>\n                <Box>\n                    <Team name={props.team_one.name} emoji={props.team_one.emoji} />\n                </Box>\n                {renderUnpredictedScore()}\n                <Box>\n                    <Team name={props.team_two.name} emoji={props.team_two.emoji} />\n                </Box>\n            </Box>\n            <Button\n                variant='contained'\n                onClick={() => endGame()}>\n                End\n            </Button>\n        </Card>\n    )\n\n}","import { Container, makeStyles, Typography } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport BottomNav from \"../misc/BottomNav\";\nimport Header from \"../misc/Header\";\nimport { getJWT, goTo } from \"../utils/Utils\";\nimport LiveGame from \"./LiveGame\";\nimport { IMatch } from \"./Predictions\";\n\nconst useStyles = makeStyles({\n    liveGames: {\n        fontSize: '8vw',\n        position: 'absolute',\n        top: '19vw',\n        width: '90%',\n        left: '5%'\n    }\n})\n\nexport default function AdminPage() {\n    const classes = useStyles()\n    const [matches, setMatches] = useState<IMatch[]>([])\n    const [invalidResponse, setInvalidResponse] = useState<boolean>(false)\n    const [isAdmin, setIsAdmin] = useState<boolean>(true)\n\n    useEffect(() => {\n        getMatches()\n        checkAdmin()\n    }, [setMatches, setIsAdmin])\n\n    function checkAdmin() {\n        fetch(goTo('is-admin'), {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authenticate\": getJWT()\n            }\n        })\n            .then(res => res.json())\n            .then(result => {\n                if (!result.success) {\n                    setIsAdmin(false)\n                }\n            });\n    }\n\n    function getMatches() {\n        fetch(goTo('match/in-progress'), {\n            method: 'GET',\n            headers: {\n                'Authenticate': getJWT()\n            }\n        }).then(res => res.json()).then(res => {\n            if (res.success) {\n                setMatches(res.matches);\n            } else {\n                setInvalidResponse(true);\n            }\n        });\n\n    }\n\n    if (invalidResponse) {\n        return (\n            <Redirect to={'/'} />\n        )\n    }\n\n    if (!isAdmin) {\n        return (\n            <Redirect to={'/home'} />\n        )\n    }\n\n    return (\n        <>\n            <Header />\n            <Container className={classes.liveGames}>\n                <Typography>Live Games</Typography>\n                {matches.map(element => {\n                    return <LiveGame {...element} />\n                })}\n            </Container>\n            <BottomNav value={'/admin'} />\n        </>\n    )\n}\n","import { HashRouter as Router, Route } from 'react-router-dom'\nimport SignUp from './authentication/SignUp'\nimport SignIn from './authentication/SignIn'\nimport LeaderboardPage from './leaderboard/LeaderboardPage'\nimport Prediction from './predictions/Predictions'\nimport Homepage from './homepage/Homepage'\nimport History from './predictions/History'\nimport AdminPage from './predictions/Admin'\n\nexport default function App() {\n    return (\n        <Router>\n            <Route path=\"/\" exact component={SignIn}/>\n            <Route path=\"/signup\" exact component={SignUp}/>\n            <Route path=\"/standings\" exact component={LeaderboardPage}/>\n            <Route path=\"/predict\" exact component={Prediction}/>\n            <Route path=\"/home\" exact component={Homepage}/>\n            <Route path=\"/history\" exact component={History}/>\n            <Route path=\"/admin\" exact component={AdminPage}/>\n        </Router>\n    )\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}