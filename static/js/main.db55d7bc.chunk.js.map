{"version":3,"sources":["utils/Constants.ts","utils/Utils.ts","authentication/SignUp.tsx","serviceWorkerRegistration.ts","authentication/SignIn.tsx","authentication/PasswordReset.tsx","leaderboard/Leaderboard.tsx","img/logo.svg","misc/Header.tsx","misc/BottomNav.tsx","predictions/Team.tsx","predictions/Game.tsx","predictions/Predictions.tsx","homepage/Homepage.tsx","leaderboard/LeaderboardPage.tsx","misc/HeaderReturn.tsx","predictions/FixedGame.tsx","predictions/History.tsx","predictions/LiveGame.tsx","predictions/MissingPredictions.tsx","predictions/Admin.tsx","leaderboard/SingleGameLeaderboard.tsx","predictions/MatchPredictions.tsx","App.js","reportWebVitals.js","index.tsx"],"names":["PROXY","isTokenValid","jwt","getJWT","fetch","method","headers","then","res","json","success","isAdminCheck","decoded","jwtDecode","admin","getUserid","userid","dateToOrdinal","day","calculateScore","pred_one_goals","pred_two_goals","act_one_goals","act_two_goals","undefined","pred_one","parseInt","pred_two","gotScoreCorrect","gotResultCorrect","resolveEndpoint","endpoint","parts","document","cookie","split","length","pop","shift","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","SignUp","classes","useState","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","isEmailValid","setIsEmailValid","successfulSingUp","setSuccessfulSignup","validToken","setValidToken","submitForm","test","String","toLowerCase","validateEmail","body","JSON","stringify","name","result","alert","useEffect","valid","to","Container","component","maxWidth","CssBaseline","className","Avatar","Grid","container","item","xs","sm","TextField","autoComplete","required","fullWidth","id","label","autoFocus","onChange","input","target","value","type","error","Button","onClick","render","history","push","Box","mt","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","Notification","requestPermission","permission","ready","pushManager","subscribe","userVisibleOnly","applicationServerKey","x","subscription","blocked","SignIn","handleLogin","PasswordReset","otp","setOtp","successfulReset","setSuccessfulReset","table","padding","StyledTableCell","withStyles","head","fontSize","TableCell","LeaderBoard","invalidResponse","setInvalidResponse","isLive","setIsLive","leaderboardData","setLeaderboardData","useHistory","leaderboard","matches","TableContainer","Paper","Table","size","TableHead","TableRow","TableBody","map","row","index","user","is_user","score","scope","style","paddingRight","correct_results","correct_scores","logo","maxHeight","headerBar","marginBottom","position","top","zIndex","colorStrip","content","left","height","background","Header","reload","src","alt","root","bottom","BottomNav","props","BottomNavigation","ignored","newValue","showLabels","BottomNavigationAction","icon","team","textAlign","teamEmoji","teamName","Team","emoji","justifyContent","paddingBottom","game","teaminput","fixedTeaminput","fixedTeaminputPreds","dash","date","maringTop","verticalAlign","matchCard","borderRadius","endGameButton","yourScore","yourScoreText","fixedGameTeamName","predictionHistoryTeamName","resultText","allPredictionContainer","Game","defaultWasSent","teamOneScore","setTeamOneScore","teamTwoScore","setTeamTwoScore","wasSent","setWasSent","handlePrediction","scoreOne","scoreTwo","areBothScoresValid","isNaN","validateScores","team_one_pred","team_two_pred","matchid","penalty_winners","setTimeout","sendPrediction","getResponseGlow","border","boxShadow","hasPrediction","Card","match_date","kick_off_time","team_one","OutlinedInput","onBlur","team_two","upcomingGames","paddingTop","gameContainer","Prediction","setMatches","getMatches","ThemeProvider","fontTheme","element","prediction","callback","homepage","createMuiTheme","typography","fontFamily","join","Homepage","LeaderboardPage","backButton","marginLeft","HeaderReturn","IconButton","goBack","FixedGame","renderUnpredictedScore","readOnly","team_one_goals","team_two_goals","in_progress","historyContainer","History","setName","inProgressMatches","setInProgressMatches","params","useParams","LiveGame","sendScore","confirm","MissingPredictions","predictions","setPredictions","users","liveGames","liveGamesText","missingGames","AdminPage","isAdmin","setIsAdmin","SingleGameLeaderBoard","entries","predicted_score","correct_result","correct_score","emptyData","is_knockout","predictionid","MatchPredictions","matchData","setMatchData","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById","URL","process","origin","addEventListener","response","contentType","get","status","indexOf","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.db55d7bc.chunk.js","sourcesContent":["export const PROXY = 'https://euro2020-back-end.herokuapp.com/'\n// export const PROXY = 'http://localhost:5000/'\nexport const SUCCESS = 'success'\n\nexport const pub = 'BAytDQ8so4h7QqWVGInkAkNvnuuccVmgnvTKex5qszq5QhgH8nYC7ydy1AVuHmDtkZhIrBh8ZRb3F-Qv8BqCUlA'\n","import { PROXY } from './Constants'\nimport jwtDecode from \"jwt-decode\"\n\ninterface IDecodedUser {\n    userid: number\n    admin?: boolean,\n}\n\nexport function isTokenValid(): Promise<boolean> {\n    const jwt = getJWT();\n    return fetch(PROXY + \"validateToken\", {\n        method: 'GET',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'Authenticate': jwt\n        }\n    }).then(res => res.json()).then(res => {\n        return res.success\n    })\n}\n\nexport function isAdminCheck(): boolean {\n    const jwt = getJWT();\n    try {\n        const decoded = jwtDecode<IDecodedUser>(jwt)\n        if (decoded.admin) {\n            return decoded.admin\n        }\n    } catch { }\n    return false\n}\n\nexport function getUserid(): number {\n    const jwt = getJWT();\n    try {\n        const decoded = jwtDecode<IDecodedUser>(jwt)\n        return decoded.userid\n    } catch { }\n    return 0\n}\n\n\nexport function validateEmail(email: String): boolean {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n}\n\nexport function dateToOrdinal(day: number) {\n    if (day > 3 && day < 21) return 'th';\n    switch (day % 10) {\n        case 1: return \"st\";\n        case 2: return \"nd\";\n        case 3: return \"rd\";\n        default: return \"th\";\n    }\n}\n\nexport function calculateScore(pred_one_goals: string | undefined, pred_two_goals: string | undefined, act_one_goals: number, act_two_goals: number): number {\n    if (pred_one_goals === undefined || pred_two_goals === undefined) {\n        return 0\n    }\n\n    const pred_one = parseInt(pred_one_goals)\n    const pred_two = parseInt(pred_two_goals)\n\n    if (pred_one === act_one_goals && pred_two === act_two_goals) {\n        return 3\n    }\n\n    if (act_one_goals > act_two_goals && pred_one > pred_two) {\n        return 1\n    }\n\n    if (act_one_goals < act_two_goals && pred_one < pred_two) {\n        return 1\n    }\n\n    if (act_one_goals === act_two_goals && pred_one === pred_two) {\n        return 1\n    }\n\n    return 0\n}\n\nexport function gotScoreCorrect(pred_one_goals: string | undefined, pred_two_goals: string | undefined, act_one_goals: number, act_two_goals: number): boolean {\n    if (pred_one_goals === undefined || pred_two_goals === undefined) {\n        return false\n    }\n\n    const pred_one = parseInt(pred_one_goals)\n    const pred_two = parseInt(pred_two_goals)\n    \n    return pred_one === act_one_goals && pred_two === act_two_goals\n}\n\nexport function gotResultCorrect(pred_one_goals: string | undefined, pred_two_goals: string | undefined, act_one_goals: number, act_two_goals: number): boolean {\n    if (pred_one_goals === undefined || pred_two_goals === undefined) {\n        return false\n    }\n\n    const pred_one = parseInt(pred_one_goals)\n    const pred_two = parseInt(pred_two_goals)\n    \n    return ((act_one_goals > act_two_goals && pred_one > pred_two) || (act_one_goals < act_two_goals && pred_one < pred_two) || (act_one_goals === act_two_goals && pred_one === pred_two))\n}\n\nexport function resolveEndpoint(endpoint: string): string {\n    return PROXY + endpoint\n}\n\nexport function setJWT(jwt: string) {\n    document.cookie = \"jwt=\" + jwt;\n}\n\nexport function getJWT(): string {\n    const value = `; ${document.cookie}`;\n    const parts = value.split(`; ${'jwt'}=`);\n    if (parts.length === 2) {\n        const jwt = parts.pop()!.split(';').shift()\n        return (typeof jwt === 'undefined') ? '' : jwt;\n    }\n    return '';\n}\n\nexport function deleteJWT() {\n    document.cookie = 'jwt=';\n}","import React, { useEffect, useState } from 'react';\nimport { Redirect, Route } from 'react-router-dom'\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { resolveEndpoint, isTokenValid, validateEmail } from '../utils/Utils';\nimport { SUCCESS } from '../utils/Constants';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignUp() {\n  const classes = useStyles();\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [isEmailValid, setIsEmailValid] = useState(true);\n  const [successfulSingUp, setSuccessfulSignup] = useState(false);\n  const [validToken, setValidToken] = useState(false);\n\n  useEffect(() => {\n    isTokenValid().then(valid => {\n      if (valid) {\n        setValidToken(true)\n      }\n    })\n  }, [setValidToken])\n\n  function submitForm() {\n    if (!validateEmail(email)) {\n      setIsEmailValid(false)\n      return\n    }\n\n    if (password !== confirmPassword) {\n      return\n    }\n\n    fetch(resolveEndpoint('signup'), {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email: email,\n        password: password,\n        name: firstName + ' ' + lastName\n      })\n    })\n      .then(res => res.json())\n      .then(result => {\n        if (result[SUCCESS] === false) {\n          alert('error whilst signing up :(')\n        } else {\n          setSuccessfulSignup(true)\n        }\n      });\n  }\n\n  if (validToken) {\n    return (\n      <Redirect to={'/home'} />\n    )\n  }\n  else if (successfulSingUp) {\n    return (\n      <Redirect to={'/'} />\n    )\n  } else {\n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <div className={classes.form}>\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  autoComplete=\"fname\"\n                  name=\"firstName\"\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"firstName\"\n                  label=\"First Name\"\n                  autoFocus\n                  onChange={(input) => setFirstName(input.target.value)}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"lastName\"\n                  label=\"Last Name\"\n                  name=\"lastName\"\n                  autoComplete=\"lname\"\n                  onChange={(input) => setLastName(input.target.value)}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  type=\"email\"\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                  onChange={(input) => setEmail(input.target.value)}\n                  error={!isEmailValid}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"current-password\"\n                  onChange={(input) => setPassword(input.target.value)}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  name=\"confirmpassword\"\n                  label=\"Confirm Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"current-password\"\n                  onChange={(input) => setConfirmPassword(input.target.value)}\n                  error={password !== confirmPassword}\n                />\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={() => submitForm()}\n            >\n              Sign Up\n            </Button>\n            <Grid container>\n              <Grid item>\n                <Route render={({ history }: { history: any }) => (\n                  <Link onClick={() => { history.push('/') }} variant=\"body2\">\n                    Already have an account? Sign in\n                  </Link>\n                )} />\n              </Grid>\n            </Grid>\n          </div>\n        </div>\n        <Box mt={8}>\n          <Copyright />\n        </Box>\n      </Container>\n    );\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\nimport { pub } from \"./utils/Constants\";\nimport { getJWT, resolveEndpoint } from \"./utils/Utils\";\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://cra.link/PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://cra.link/PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function registerPushNotifications() {\n    navigator.serviceWorker.ready.then((registration) => {\n        registration.pushManager.subscribe({\n            userVisibleOnly: true,\n            applicationServerKey: pub,\n        }).then(x => {\n            console.log(\"Success from push sub\")\n            console.log(x)\n\n            fetch(resolveEndpoint('notification/subscribe'), {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    'Authenticate': getJWT()\n                },\n                body: JSON.stringify({\n                    subscription: JSON.stringify(x),\n                    blocked: false,\n                })\n            }).then(res => {\n                console.log(res)\n            })\n        })\n    })\n}\n\nexport function updateNotificationDenied() {\n    fetch(resolveEndpoint('notification/subscribe'), {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            'Authenticate': getJWT()\n        },\n        body: JSON.stringify({\n            blocked: true,\n        })\n    })\n}\n\nexport function test() {\n\n    Notification.requestPermission().then(permission => {\n        if (permission === 'denied') {\n            updateNotificationDenied()\n            return\n        }\n        if (permission === 'default') {\n            return\n        }\n        registerPushNotifications()\n    })\n\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then((registration) => {\n                registration.unregister();\n            })\n            .catch((error) => {\n                console.error(error.message);\n            });\n    }\n}\n","import React, { useEffect, useState } from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Link from '@material-ui/core/Link';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { resolveEndpoint, isTokenValid, setJWT } from '../utils/Utils';\nimport { test } from '../serviceWorkerRegistration'\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Ali Colver & Luke Ely\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignIn() {\n  const classes = useStyles();\n  const [email, setEmail] = useState({ value: '', error: false });\n  const [password, setPassword] = useState({ value: '', error: false });\n  const [validToken, setValidToken] = useState(false);\n\n  useEffect(() => {\n    isTokenValid().then(valid => {\n      if (valid === true) {\n        setValidToken(true)\n      }\n    })\n  }, [setValidToken])\n\n  const handleLogin = () => {\n    fetch(resolveEndpoint('login'), {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email: email.value,\n        password: password.value\n      })\n    })\n      .then(res => res.json())\n      .then(result => {\n        if (result[\"success\"] === true) {\n          setJWT(result[\"token\"]);\n          setValidToken(true)\n          test()\n        } else {\n          setPassword({ ...password, error: true });\n          setEmail({ ...email, error: true });\n        }\n      });\n  };\n\n  if (validToken) {\n    return (\n      <Redirect to={'/home'} />\n    )\n  } else {\n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <div className={classes.form}>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              type=\"email\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              onChange={(input) => setEmail({ ...email, value: input.target.value })}\n              error={email.error}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              onChange={(input) => setPassword({ ...password, value: input.target.value })}\n              error={password.error}\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={() => handleLogin()}\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item>\n                <Route render={({ history }: { history: any }) => (\n                  <Link onClick={() => { history.push('/signup') }} variant=\"body2\">\n                    {\"Don't have an account? Sign Up\"}\n                  </Link>\n                )} />\n              </Grid>\n              <Grid item>\n                <Route render={({ history }: { history: any }) => (\n                  <Link onClick={() => { history.push('/reset') }} variant=\"body2\">\n                    {\"Forgotten your password? Reset it here.\"}\n                  </Link>\n                )} />\n              </Grid>\n            </Grid>\n          </div>\n        </div>\n        <Box mt={8}>\n          <Copyright />\n        </Box>\n      </Container>\n    );\n  }\n}","import React, { useEffect, useState } from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Link from '@material-ui/core/Link';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { resolveEndpoint, isTokenValid } from '../utils/Utils';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Ali Colver & Luke Ely\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function PasswordReset() {\n  const classes = useStyles();\n  const [email, setEmail] = useState({ value: '', error: false });\n  const [otp, setOtp] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [validToken, setValidToken] = useState(false);\n  const [successfulReset, setSuccessfulReset] = useState(false);\n\n  useEffect(() => {\n    isTokenValid().then(valid => {\n      if (valid) {\n        setValidToken(true)\n      }\n    })\n  }, [setValidToken])\n\n  function sendOtp(): void {\n    fetch(resolveEndpoint('reset-password'), {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email: email.value\n      })\n    })\n      .then(res => res.json())\n      .then(result => {\n        if (!result[\"success\"]) {\n          alert('Error creating OTP try again later')\n        }\n      });\n  }\n\n  function resetPassword(): void {\n    if (password !== confirmPassword) {\n      return\n    }\n\n    fetch(resolveEndpoint('reset-password'), {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email: email.value,\n        otp: otp,\n        password: password\n      })\n    })\n      .then(res => res.json())\n      .then(result => {\n        if (result[\"success\"]) {\n          setSuccessfulReset(true)\n        } else {\n          alert('Error resetting password')\n        }\n      });\n  }\n\n  if (validToken) {\n    return (\n      <Redirect to={'/home'} />\n    )\n  } else if (successfulReset) {\n    return (\n      <Redirect to={'/'} />\n    )\n  } else {\n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Recover Password\n          </Typography>\n          <div className={classes.form}>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              type=\"email\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              onChange={(input) => setEmail({ ...email, value: input.target.value })}\n              error={email.error}\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={() => sendOtp()}\n            >\n              Request OTP\n            </Button>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"One Time Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"OTP\"\n              onChange={(input) => setOtp(input.target.value)}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              onChange={(input) => setPassword(input.target.value)}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"confirmPassword\"\n              label=\"Confirm Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              onChange={(input) => setConfirmPassword(input.target.value)}\n              error={password !== confirmPassword}\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={() => resetPassword()}\n            >\n              Reset Password\n            </Button>\n            <Grid container>\n              <Grid item>\n                <Route render={({ history }: { history: any }) => (\n                  <Link onClick={() => { history.push('/signup') }} variant=\"body2\">\n                    {\"Don't have an account? Sign Up\"}\n                  </Link>\n                )} />\n              </Grid>\n            </Grid>\n          </div>\n        </div>\n        <Box mt={8}>\n          <Copyright />\n        </Box>\n      </Container>\n    );\n  }\n}","import React, { useState, useEffect } from 'react';\nimport { getJWT, resolveEndpoint } from \"../utils/Utils\";\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\n\nconst useStyles = makeStyles({\n  table: {\n    padding: '5px'\n  },\n});\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: '#1caac9',\n    color: 'white',\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\n\ninterface leaderBoardRecord {\n  name: String,\n  correct_results: number,\n  correct_scores: number,\n  score: number,\n  userid: number,\n  is_user: boolean,\n}\n\nexport default function LeaderBoard() {\n  const classes = useStyles();\n  const [invalidResponse, setInvalidResponse] = useState<boolean>(false)\n  const [isLive, setIsLive] = useState(false);\n  const [leaderboardData, setLeaderboardData] = useState<leaderBoardRecord[]>([])\n\n  const history = useHistory()\n\n  useEffect(() => {\n    fetch(resolveEndpoint('leaderboard'), {\n      method: 'GET',\n      headers: {\n        'Authenticate': getJWT()\n      }\n    }).then(res => res.json()).then(res => {\n      if (res.success === true) {\n        console.log(res)\n        setLeaderboardData(res.leaderboard)\n      } else {\n        setInvalidResponse(true)\n      }\n    })\n\n    fetch(resolveEndpoint('match/in-progress'), {\n      method: 'GET',\n      headers: {\n        'Authenticate': getJWT()\n      }\n    }).then(res => res.json()).then(res => {\n      if (res.success) {\n        setIsLive(res.matches.length > 0);\n      }\n    });\n\n  }, [setLeaderboardData])\n\n\n  function renderLive() {\n    if (isLive) {\n      return <FiberManualRecordIcon style={{ color: 'green', paddingRight: '3vw' }} />\n    } else {\n      return <></>\n    }\n  }\n\n  function generateHistoryRedirect(user: leaderBoardRecord) {\n    return () => {\n      if (user.is_user) {\n        history.push('/history/')\n      } else {\n        history.push('/history/' + user.userid)\n      }\n    }\n  }\n\n  function getRows() {\n    return (leaderboardData.map((row, index) => (\n      <TableRow key={index} onClick={generateHistoryRedirect(row)} >\n        <TableCell>{index === 0 ? index + 1 : (leaderboardData[index - 1].score === row.score ? '=' : index + 1)}</TableCell>\n        <TableCell component=\"th\" scope=\"row\">\n          {row.name.split(' ')[0]}\n        </TableCell>\n        <TableCell align={'left'}>{renderLive()}</TableCell>\n        <TableCell>{row.correct_results}</TableCell>\n        <TableCell>{row.correct_scores}</TableCell>\n        <TableCell align=\"center\"><b>{row.score}</b></TableCell>\n      </TableRow>\n    )))\n  }\n\n  if (invalidResponse) {\n    return (\n      <Redirect to={'/'} />\n    )\n  }\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} size=\"small\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell>#</StyledTableCell>\n            <StyledTableCell>Player</StyledTableCell>\n            <StyledTableCell></StyledTableCell>\n            <StyledTableCell>R</StyledTableCell>\n            <StyledTableCell>S</StyledTableCell>\n            <StyledTableCell align=\"center\"><b>Pts</b></StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {getRows()}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/logo.b61bf1d9.svg\";","import { makeStyles } from \"@material-ui/core\";\nimport logo from '../img/logo.svg'\nimport { deleteJWT } from \"../utils/Utils\";\n\nconst useStyles = makeStyles({\n  logo: {\n    maxHeight: '15vw'\n  },\n  headerBar: {\n    maxHeight: '15vw',\n    marginBottom: '5vw',\n    position: 'fixed',\n    width: '100%',\n    backgroundColor: 'white',\n    top: 0,\n    zIndex: 10\n  },\n  colorStrip: {\n    content: \"\",\n    position: 'absolute',\n    top: '100%',\n    left: '0',\n    width: '100%',\n    height: '4px',\n    background: 'linear-gradient(130deg,#ff7a18,#af002d 41.07%,#319197 76.05%)'\n  }\n});\n\nexport default function Header() {\n  const classes = useStyles()\n\n  function logout() {\n    deleteJWT()\n    window.location.reload();\n  }\n\n  return (\n    <div className={classes.headerBar} onClick={logout} >\n      <img className={classes.logo} src={logo} alt={'euro logo'} />\n      <div className={classes.colorStrip} />\n    </div>\n  )\n}","import { BottomNavigation, BottomNavigationAction, makeStyles } from \"@material-ui/core\";\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport HistoryIcon from '@material-ui/icons/History';\nimport SportsSoccerIcon from '@material-ui/icons/SportsSoccer';\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\nimport { Route } from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n    root: {\n        width: '100vw',\n        position: 'fixed',\n        bottom: 0,\n        left: 0\n    },\n});\n\ninterface IBottomNavProps {\n    value: string\n    admin: boolean\n}\n\nexport default function BottomNav(props: IBottomNavProps) {\n    const classes = useStyles()\n\n    function getAdminPage() {\n        return props.admin ?\n            <BottomNavigationAction label=\"Admin\" value=\"/admin\" icon={<SupervisorAccountIcon />} /> :\n            <></>\n    }\n\n    return (\n        <Route render={({ history }: { history: any }) => (\n            <BottomNavigation\n                value={props.value}\n                onChange={(ignored, newValue) => {\n                    history.push(newValue)\n                }}\n                showLabels\n                className={classes.root}\n            >\n                <BottomNavigationAction label=\"Standings\" value=\"/standings\" icon={<BarChartIcon />} />\n                <BottomNavigationAction label=\"Predict\" value=\"/home\" icon={<SportsSoccerIcon />} />\n                <BottomNavigationAction label=\"History\" value=\"/history\" icon={<HistoryIcon />} />\n                {getAdminPage()}\n            </BottomNavigation>\n        )} />\n\n    )\n}","import { Box, makeStyles } from \"@material-ui/core\"\n\ninterface ITeamProps {\n    emoji: String,\n    name: String\n}\n\nconst useStyles = makeStyles({\n    team: {\n        textAlign: 'center',\n        width: '25vw'\n    },\n    teamEmoji: {\n        fontSize: '15vw'\n    },\n    teamName: {\n        fontSize: '4vw'\n    }\n})\n\nexport default function Team(props: ITeamProps) {\n    const classes = useStyles()\n\n    return (\n        <Box className={classes.team}>\n            <div className={classes.teamEmoji}>\n                {props.emoji}\n            </div>\n            <div className={classes.teamName}>\n                {props.name}\n            </div>\n        </Box>\n    )\n}","import { Box, Card, makeStyles, OutlinedInput } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { SUCCESS } from \"../utils/Constants\";\nimport { dateToOrdinal, getJWT, resolveEndpoint } from \"../utils/Utils\";\nimport { IMatch } from \"./Predictions\";\nimport Team from \"./Team\";\n\nexport const useStyles = makeStyles({\n    match: {\n        width: '80vw',\n        margin: '0 auto',\n        display: 'flex',\n        justifyContent: 'space-between',\n        paddingBottom: '3vw'\n    },\n    game: {\n        width: '80vw',\n        margin: '0 auto',\n        display: 'flex',\n        justifyContent: 'space-between',\n        marginTop: '5vh',\n        position: 'relative'\n    },\n    teaminput: {\n        width: '50px',\n        height: '50px',\n        fontSize: '40px',\n        textAlign: 'center',\n        marginTop: '4vw'\n    },\n    fixedTeaminput: {\n        width: '50px',\n        height: '50px',\n        fontSize: '40px',\n        textAlign: 'center',\n        marginTop: '1vw'\n    },\n    fixedTeaminputPreds: {\n        width: '50px',\n        height: '50px',\n        fontSize: '40px',\n        textAlign: 'center',\n        marginTop: '7vw'\n    },\n    dash: {\n        fontSize: '8vw',\n        marginTop: '4vw'\n    },\n    date: {\n        fontSize: '4vw',\n        marginBottom: '0.5vh',\n        maringTop: '0.5vh',\n        verticalAlign: 'center',\n        position: 'relative',\n        color: 'grey'\n    },\n    matchCard: {\n        marginBottom: '4vh',\n        textAlign: 'center',\n        borderRadius: '10px'\n    },\n    endGameButton: {\n        marginBottom: '3vw'\n    },\n    yourScore: {\n        marginTop: '3vw',\n    },\n    yourScoreText: {\n        padding: '4px',\n        borderRadius: '3px',\n        color: 'white'\n    },\n    fixedGameTeamName: {\n        marginTop: '7vw'\n    },\n    predictionHistoryTeamName: {\n        marginTop: '3vw'\n    },\n    resultText: {\n        backgroundColor: '#505e73',\n        padding: '4px',\n        borderRadius: '3px',\n        color: 'white'\n    },\n    allPredictionContainer: {\n        marginTop: '25vw',\n        marginBottom: '19vw',\n        position: 'fixed'\n    }\n})\n\ninterface IGameProps {\n    callback: () => void,\n    hasPrediction: boolean,\n    team_one_pred?: string,\n    team_two_pred?: string\n}\n\nexport default function Game(props: IMatch & IGameProps) {\n    const classes = useStyles()\n    const defaultWasSent = { success: false, error: false }\n    const [teamOneScore, setTeamOneScore] = useState({ score: '', error: false });\n    const [teamTwoScore, setTeamTwoScore] = useState({ score: '', error: false });\n    const [wasSent, setWasSent] = useState(defaultWasSent)\n\n    useEffect(() => {\n        if (props.hasPrediction) {\n            setTeamOneScore({\n                error: false,\n                score: props.team_one_pred!\n            })\n            setTeamTwoScore({\n                error: false,\n                score: props.team_two_pred!\n            })\n        }\n        setWasSent({ success: false, error: false })\n    }, [props.hasPrediction, props.team_one_pred, props.team_two_pred])\n\n    function handlePrediction() {\n        const scoreOne = parseInt(teamOneScore.score)\n        const scoreTwo = parseInt(teamTwoScore.score)\n        var areBothScoresValid = validateScores(scoreOne, scoreTwo);\n\n        if (!areBothScoresValid) {\n            return\n        }\n\n        setTeamOneScore({ ...teamOneScore, error: false })\n        setTeamTwoScore({ ...teamTwoScore, error: false })\n\n        sendPrediction(scoreOne, scoreTwo);\n    }\n\n    function validateScores(scoreOne: number, scoreTwo: number) {\n        var areBothScoresValid = true;\n        if (isNaN(scoreOne)) {\n            setTeamOneScore({ ...teamOneScore, error: true });\n            areBothScoresValid = false;\n        }\n\n        if (isNaN(scoreTwo)) {\n            setTeamTwoScore({ ...teamTwoScore, error: true });\n            areBothScoresValid = false;\n        }\n\n        return areBothScoresValid;\n    }\n\n    function sendPrediction(scoreOne: number, scoreTwo: number) {\n        fetch(resolveEndpoint('prediction'), {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Authenticate': getJWT()\n            },\n            body: JSON.stringify({\n                team_one_pred: scoreOne,\n                team_two_pred: scoreTwo,\n                matchid: props.match.matchid,\n                penalty_winners: null\n            })\n        })\n            .then(res => res.json())\n            .then(result => {\n                if (!result[SUCCESS]) {\n                    setWasSent({ success: false, error: true })\n                } else {\n                    setWasSent({ success: true, error: false })\n                }\n                setTimeout(function () {\n                    setWasSent(defaultWasSent);\n                }, 500)\n            });\n    }\n\n    function renderUnpredictedScore() {\n        return (\n            <>\n                <OutlinedInput\n                    className={classes.teaminput}\n                    style={getResponseGlow()}\n                    id=\"outlined-basic\"\n                    type=\"number\"\n                    value={teamOneScore.score}\n                    onChange={(input) => setTeamOneScore({ ...teamOneScore, score: input.target.value })}\n                    onBlur={() => handlePrediction()}\n                    error={teamOneScore.error} />\n                <OutlinedInput\n                    className={classes.teaminput}\n                    id=\"outlined-basic\"\n                    type=\"number\"\n                    style={getResponseGlow()}\n                    value={teamTwoScore.score}\n                    onChange={(input) => setTeamTwoScore({ ...teamTwoScore, score: input.target.value })}\n                    onBlur={() => handlePrediction()}\n                    error={teamTwoScore.error}\n                />\n            </>\n        )\n    }\n\n    function getResponseGlow(): React.CSSProperties | undefined {\n        return wasSent.success ?\n            {\n                border: '1px solid rgb(86, 180, 89)',\n                boxShadow: '0px 1px 3px rgba(0, 0, 0, 0.05)inset, 0px 0px 8px rgba(82, 168, 100, 0.6)'\n            } : wasSent.error ? {\n                border: '1px solid rgb(199, 18, 49)',\n                boxShadow: '0px 1px 3px rgba(0, 0, 0, 0.05)inset, 0px 0px 8px rgba(160, 30, 60, 0.6)'\n            } : {};\n    }\n\n    return (\n            <Card className={classes.matchCard}>\n                <Box className={classes.date}>\n                    {props.match.match_date + dateToOrdinal(parseInt(props.match.match_date)) + \" - \" + props.match.kick_off_time}\n                </Box>\n                <Box className={classes.match}>\n                    <Box>\n                        <Team name={props.team_one.name} emoji={props.team_one.emoji} />\n                    </Box>\n                    {renderUnpredictedScore()}\n                    <Box>\n                        <Team name={props.team_two.name} emoji={props.team_two.emoji} />\n                    </Box>\n                </Box>\n            </Card>\n    )\n}","import Game from \"./Game\";\nimport { Container, makeStyles, ThemeProvider, Typography } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { getJWT, resolveEndpoint } from \"../utils/Utils\";\nimport { Redirect } from \"react-router\";\nimport { fontTheme } from \"../homepage/Homepage\";\n\nconst useStyles = makeStyles({\n    upcomingGames: {\n        fontSize: '8vw',\n        paddingTop: '4vw',\n        paddingBottom: '4vw',\n        textAlign: 'center'\n    },\n    gameContainer: {\n        marginBottom: '19vw'\n    }\n})\n\nexport interface ITeam {\n    name: string,\n    emoji: string\n}\n\nexport interface IMatchDetails {\n    match_date: string,\n    kick_off_time: string,\n    is_knockout: boolean,\n    team_one_goals: string,\n    team_two_goals: string,\n    matchid: number\n}\n\nexport interface IPrediction {\n    team_one_pred: string,\n    team_two_pred: string,\n    predictionid: string,\n    score?: number,\n    name?: string\n}\n\nexport interface IMatch {\n    team_one: ITeam,\n    team_two: ITeam,\n    match: IMatchDetails,\n    hasPrediction: boolean,\n    prediction?: IPrediction\n    in_progress?: boolean\n}\n\nexport default function Prediction() {\n    const classes = useStyles()\n    const [matches, setMatches] = useState<IMatch[]>([])\n    const [invalidResponse, setInvalidResponse] = useState<boolean>(false)\n\n    useEffect(() => {\n        getMatches();\n    }, [setMatches])\n\n    if (invalidResponse) {\n        return (\n            <Redirect to={'/'} />\n        )\n    } else {\n        return (\n            <ThemeProvider theme={fontTheme}>\n                <Container className={classes.gameContainer}>\n                    <Typography className={classes.upcomingGames}>Upcoming Games</Typography>\n                    {matches.map(element => {\n                        if (element.hasPrediction && element.prediction) {\n                            return <Game {...element} callback={getMatches} team_one_pred={element.prediction.team_one_pred} team_two_pred={element.prediction.team_two_pred} />\n                        } else {\n                            return <Game {...element} callback={getMatches} />\n                        }\n                    })}\n                </Container>\n            </ThemeProvider>\n        )\n    }\n\n    function getMatches() {\n        console.log('attempting fetch')\n        fetch(resolveEndpoint('prediction-required'), {\n            method: 'GET',\n            headers: {\n                'Authenticate': getJWT()\n            }\n        }).then(res => res.json()).then(res => {\n            if (res.success) {\n                setMatches(res.matches);\n            } else {\n                setInvalidResponse(true);\n            }\n        });\n    }\n}","import { Container, createMuiTheme, makeStyles, ThemeProvider } from '@material-ui/core';\nimport React from 'react';\nimport BottomNav from '../misc/BottomNav';\nimport Header from '../misc/Header';\nimport Prediction from '../predictions/Predictions';\nimport { isAdminCheck } from \"../utils/Utils\";\n\nconst useStyles = makeStyles({\n  logo: {\n    maxHeight: '15vw'\n  },\n  homepage: {\n    position: 'absolute',\n    top: '15vw',\n    left: 0,\n    width: '100%',\n    marginBottom: '30vw'\n  }\n});\n\nexport const fontTheme = createMuiTheme({\n  typography: {\n    fontFamily: [\n      'Source Sans Pro',\n      'sans-serif',\n    ].join(','),\n  },\n});\n\nfunction Homepage() {\n  const classes = useStyles();\n  return (\n    <ThemeProvider theme={fontTheme}>\n      <Header />\n      <Container className={classes.homepage}>\n        <Prediction />\n      </Container>\n      <BottomNav value={'/home'} admin={isAdminCheck()} />\n    </ThemeProvider>\n  )\n}\n\nexport default Homepage;","import LeaderBoard from \"./Leaderboard\";\nimport React from \"react\";\nimport { makeStyles, ThemeProvider, Typography } from \"@material-ui/core\";\nimport Header from \"../misc/Header\";\nimport BottomNav from \"../misc/BottomNav\";\nimport { fontTheme } from \"../homepage/Homepage\";\nimport { isAdminCheck } from \"../utils/Utils\";\n\nconst useStyles = makeStyles({\n  leaderboard: {\n    padding: '5px',\n    marginTop: '50px',\n    marginBottom: '10vw',\n    paddingTop: '5vw',\n    paddingBottom: '10vw'\n  },\n  upcomingGames: {\n    fontSize: '8vw',\n    paddingTop: '4vw',\n    paddingBottom: '4vw',\n    textAlign: 'center',\n    fontFamily: [\n      'Source Sans Pro',\n      'sans-serif',\n    ].join(',')\n  }\n});\n\nexport default function LeaderboardPage() {\n  const classes = useStyles();\n\n  return (\n    <ThemeProvider theme={fontTheme}>\n      <Header />\n      <div className={classes.leaderboard}>\n        <Typography className={classes.upcomingGames}>Standings</Typography>\n        <LeaderBoard />\n      </div>\n      <BottomNav value={'/standings'} admin={isAdminCheck()} />\n    </ThemeProvider>\n  )\n}","import { makeStyles } from \"@material-ui/core\";\nimport logo from '../img/logo.svg'\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport { IconButton } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n  logo: {\n    maxHeight: '15vw'\n  },\n  backButton: {\n    position: 'absolute',\n    top: '50%',\n    marginTop: '-22px',\n    marginLeft: '5vw',\n  },\n  headerBar: {\n    height: '15vw',\n    marginBottom: '10vw',\n    position: 'fixed',\n    width: '100%',\n    backgroundColor: 'white',\n    top: 0,\n    zIndex: 10\n  },\n  colorStrip: {\n    content: \"\",\n    position: 'absolute',\n    top: '100%',\n    left: '0',\n    width: '100%',\n    height: '4px',\n    background: 'linear-gradient(130deg,#ff7a18,#af002d 41.07%,#319197 76.05%)'\n  }\n});\n\nexport default function HeaderReturn() {\n  const classes = useStyles()\n  let history = useHistory();\n\n  function goBack() {\n    history.goBack()\n  }\n\n  return (\n    <div className={classes.headerBar}>\n      <IconButton className={classes.backButton} onClick={goBack}>\n        <ArrowBackIcon />\n      </IconButton>\n      <img className={classes.logo} src={logo} alt={'euro logo'} />\n      <div className={classes.colorStrip} />\n    </div>\n  )\n}","import { Box, Card, Grid, OutlinedInput } from \"@material-ui/core\";\nimport { useStyles } from \"./Game\";\nimport { IMatch } from \"./Predictions\";\nimport Team from \"./Team\";\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\nimport { Route } from \"react-router-dom\";\n\nexport default function FixedGame(props: IMatch) {\n    const classes = useStyles()\n\n    function renderUnpredictedScore() {\n        return (\n            <Grid container spacing={1}>\n                <Grid item xs={12} className={classes.yourScore}>\n                    <span className={classes.yourScoreText}\n                        style={{\n                            backgroundColor: props.prediction?.score === 3 ? '#16b877' : props.prediction?.score === 1 ? '#1caac9' : '#505e73'\n                        }}\n                    >{(props.prediction?.score || 0) + ' pts'}</span>\n                </Grid>\n                <Grid item xs={6}>\n                    <OutlinedInput\n                        className={classes.fixedTeaminput}\n                        id=\"outlined-basic\"\n                        type=\"number\"\n                        value={props.prediction?.team_one_pred}\n                        readOnly\n                    />\n                </Grid>\n                <Grid item xs={6}>\n                    <OutlinedInput\n                        className={classes.fixedTeaminput}\n                        id=\"outlined-basic\"\n                        type=\"number\"\n                        value={props.prediction?.team_two_pred}\n                        readOnly\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <span className={classes.resultText}>{(props.match.team_one_goals || 0) + '-' + (props.match.team_two_goals || 0)}</span>\n                </Grid>\n            </Grid>\n        )\n    }\n\n    return (\n        <Route render={({ history }: { history: any }) => (\n        <Card className={classes.matchCard} onClick={() => { history.push('/match/' + props.match.matchid) }}>\n            {props.in_progress ?\n                <div style={{ position: 'absolute', left: '6vw', paddingTop: '1vh' }}>\n                    <FiberManualRecordIcon style={{ color: 'green' }} />\n                </div> :\n                <></>\n            }\n            <Box className={classes.match}>\n                <Box className={classes.fixedGameTeamName}>\n                    <Team name={props.team_one.name} emoji={props.team_one.emoji} />\n                </Box>\n                {renderUnpredictedScore()}\n                <Box className={classes.fixedGameTeamName}>\n                    <Team name={props.team_two.name} emoji={props.team_two.emoji} />\n                </Box>\n            </Box>\n        </Card>\n        )} />\n    )\n}","import { Container, makeStyles, ThemeProvider, Typography } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { Redirect, useParams } from \"react-router-dom\";\nimport { fontTheme } from \"../homepage/Homepage\";\nimport BottomNav from \"../misc/BottomNav\";\nimport Header from \"../misc/Header\";\nimport HeaderReturn from \"../misc/HeaderReturn\";\nimport { resolveEndpoint, getJWT, isAdminCheck, getUserid } from \"../utils/Utils\";\nimport FixedGame from \"./FixedGame\";\nimport { IMatch } from \"./Predictions\";\n\nconst useStyles = makeStyles({\n    upcomingGames: {\n        fontSize: '8vw',\n        marginTop: '19vw',\n        fontFamily: [\n            'Source Sans Pro',\n            'sans-serif',\n        ].join(','),\n        paddingBottom: '3vw'\n    },\n    historyContainer: {\n        marginBottom: '19vw',\n        textAlign: 'center'\n    }\n})\n\ninterface IParams {\n    userid?: string\n}\n\nexport default function History() {\n    const classes = useStyles()\n    const [name, setName] = useState<string>(\"Your\")\n    const [matches, setMatches] = useState<IMatch[]>([])\n    const [inProgressMatches, setInProgressMatches] = useState<IMatch[]>([])\n    const [invalidResponse, setInvalidResponse] = useState<boolean>(false)\n\n    const params = useParams<IParams>()\n\n    useEffect(() => {\n        if (params.userid) {\n            getMatches(parseInt(params.userid));\n            getName(parseInt(params.userid))\n        } else {\n            console.log(getUserid())\n            getMatches(getUserid())\n        }\n    }, [params.userid])\n\n    if (invalidResponse) {\n        return (\n            <Redirect to={'/'} />\n        )\n    } else {\n        return (\n            <ThemeProvider theme={fontTheme}>\n                {!params.userid ? <Header /> : <HeaderReturn />}\n                <Container className={classes.historyContainer}>\n                    <Typography className={classes.upcomingGames}>{name} Predictions</Typography>\n                    {inProgressMatches.map(element => { return (<FixedGame {...element} in_progress={true}/>) })}\n                    {matches.map(element => { return (<FixedGame {...element} />) })}\n                </Container>\n                {!params.userid ? <BottomNav value={'/history'} admin={isAdminCheck()} /> : <></>}\n            </ThemeProvider>\n        )\n    }\n\n    function getMatches(userid: number) {\n        fetch(resolveEndpoint('match/ended?userid=' + userid), {\n            method: 'GET',\n            headers: {\n                'Authenticate': getJWT()\n            }\n        }).then(res => res.json()).then(res => {\n            if (res.success) {\n                setMatches(res.matches)\n            } else {\n                setInvalidResponse(true);\n            }\n        });\n        fetch(resolveEndpoint('match/in-progress?userid=' + userid), {\n            method: 'GET',\n            headers: {\n                'Authenticate': getJWT()\n            }\n        }).then(res => res.json()).then(res => {\n            if (res.success) {\n                setInProgressMatches(res.matches)\n            } else {\n                setInvalidResponse(true);\n            }\n        });\n    }\n\n    function getName(userid: number) {\n        fetch(resolveEndpoint('user/name?userid=' + userid), {\n            method: 'GET',\n            headers: {\n                'Authenticate': getJWT()\n            }\n        }).then(res => res.json()).then(res => {\n            if (res.success) {\n                setName(res.name.split(\" \")[0] + \"'s\")\n            } else {\n                setInvalidResponse(true);\n            }\n        });\n    }\n}","import { Box, Button, Card, OutlinedInput } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { SUCCESS } from \"../utils/Constants\";\nimport { dateToOrdinal, getJWT, resolveEndpoint } from \"../utils/Utils\";\nimport { useStyles } from \"./Game\";\nimport { IMatch } from \"./Predictions\";\nimport Team from \"./Team\";\n\nexport default function LiveGame(props: IMatch) {\n    const classes = useStyles()\n    const defaultWasSent = { success: false, error: false }\n    const [teamOneScore, setTeamOneScore] = useState({ score: '', error: false });\n    const [teamTwoScore, setTeamTwoScore] = useState({ score: '', error: false });\n    const [wasSent, setWasSent] = useState(defaultWasSent)\n\n    useEffect(() => {\n        setTeamOneScore({\n            error: false,\n            score: props.match.team_one_goals\n        })\n        setTeamTwoScore({\n            error: false,\n            score: props.match.team_two_goals\n        })\n        setWasSent({ success: false, error: false })\n    }, [props.match.team_one_goals, props.match.team_two_goals])\n\n    function handlePrediction() {\n        const scoreOne = parseInt(teamOneScore.score)\n        const scoreTwo = parseInt(teamTwoScore.score)\n        var areBothScoresValid = validateScores(scoreOne, scoreTwo);\n\n        if (!areBothScoresValid) {\n            return\n        }\n\n        setTeamOneScore({ ...teamOneScore, error: false })\n        setTeamTwoScore({ ...teamTwoScore, error: false })\n\n        sendScore(scoreOne, scoreTwo);\n    }\n\n    function sendScore(scoreOne: number, scoreTwo: number) {\n        fetch(resolveEndpoint('score'), {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Authenticate': getJWT()\n            },\n            body: JSON.stringify({\n                team_one_goals: scoreOne,\n                team_two_goals: scoreTwo,\n                matchid: props.match.matchid\n            })\n        })\n            .then(res => res.json())\n            .then(result => {\n                if (!result[SUCCESS]) {\n                    alert('Error whilst updating scores, please try again');\n                } else {\n                    setWasSent({ ...wasSent, success: true })\n                }\n            });\n    }\n\n    function endGame() {\n        if (window.confirm('Are you sure the match is finished?')) {\n            fetch(resolveEndpoint('match/end'), {\n                method: \"PUT\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    'Authenticate': getJWT()\n                },\n                body: JSON.stringify({\n                    matchid: props.match.matchid\n                })\n            })\n                .then(res => res.json())\n                .then(result => {\n                    if (!result[SUCCESS]) {\n                        alert('Error whilst updating scores, please try again')\n                    }\n                });\n        }\n    }\n\n    function validateScores(scoreOne: number, scoreTwo: number) {\n        var areBothScoresValid = true;\n        if (isNaN(scoreOne)) {\n            setTeamOneScore({ ...teamOneScore, error: true });\n            areBothScoresValid = false;\n        }\n\n        if (isNaN(scoreTwo)) {\n            setTeamTwoScore({ ...teamTwoScore, error: true });\n            areBothScoresValid = false;\n        }\n\n        return areBothScoresValid;\n    }\n\n    function renderUnpredictedScore() {\n        return (\n            <>\n                <OutlinedInput\n                    className={classes.teaminput}\n                    style={getResponseGlow()}\n                    id=\"outlined-basic\"\n                    type=\"number\"\n                    value={teamOneScore.score}\n                    onChange={(input) => setTeamOneScore({ ...teamOneScore, score: input.target.value })}\n                    onBlur={() => handlePrediction()}\n                    error={teamOneScore.error} />\n                <OutlinedInput\n                    className={classes.teaminput}\n                    id=\"outlined-basic\"\n                    type=\"number\"\n                    style={getResponseGlow()}\n                    value={teamTwoScore.score}\n                    onChange={(input) => setTeamTwoScore({ ...teamTwoScore, score: input.target.value })}\n                    onBlur={() => handlePrediction()}\n                    error={teamTwoScore.error}\n                />\n            </>\n        )\n    }\n\n    function getResponseGlow(): React.CSSProperties | undefined {\n        return wasSent.success ?\n            {\n                border: '1px solid rgb(86, 180, 89)',\n                boxShadow: '0px 1px 3px rgba(0, 0, 0, 0.05)inset, 0px 0px 8px rgba(82, 168, 100, 0.6)'\n            } : wasSent.error ? {\n                border: '1px solid rgb(199, 18, 49)',\n                boxShadow: '0px 1px 3px rgba(0, 0, 0, 0.05)inset, 0px 0px 8px rgba(160, 30, 60, 0.6)'\n            } : {};\n    }\n\n    return (\n        <Card className={classes.matchCard}>\n            <Box className={classes.date}>\n                {props.match.match_date + dateToOrdinal(parseInt(props.match.match_date)) + \" - \" + props.match.kick_off_time}\n            </Box>\n            <Box className={classes.match}>\n                <Box>\n                    <Team name={props.team_one.name} emoji={props.team_one.emoji} />\n                </Box>\n                {renderUnpredictedScore()}\n                <Box>\n                    <Team name={props.team_two.name} emoji={props.team_two.emoji} />\n                </Box>\n            </Box>\n            <Button\n                variant='contained'\n                className={classes.endGameButton}\n                onClick={() => endGame()}>\n                End\n            </Button>\n        </Card>\n    )\n\n}","import { Box, Card, Typography } from \"@material-ui/core\"\nimport { useEffect, useState } from \"react\"\nimport { dateToOrdinal, getJWT, resolveEndpoint } from \"../utils/Utils\"\nimport { useStyles } from \"./Game\"\nimport { IMatchDetails, ITeam } from \"./Predictions\"\nimport Team from \"./Team\"\n\ninterface IUser {\n    name: string,\n    userid: number\n}\n\ninterface IMatchPredictionDetails {\n    match: IMatchDetails,\n    team_one: ITeam,\n    team_two: ITeam,\n    users: IUser[]\n}\n\nexport default function MissingPredictions() {\n    const classes = useStyles()\n    const [predictions, setPredictions] = useState<IMatchPredictionDetails[]>([])\n\n    useEffect(() => {\n        fetchMissingPredictions()\n    }, [setPredictions])\n\n\n    function fetchMissingPredictions() {\n        fetch(resolveEndpoint('match/missing'), {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Authenticate': getJWT()\n            }\n        })\n            .then(res => res.json())\n            .then(res => {\n                if (res[\"success\"]) {\n                    setPredictions(res[\"matches\"])\n                }\n            })\n    }\n\n    if (predictions.length === 0) {\n        return <></>\n    }\n\n    return (\n        <>\n            <Typography style={{ fontSize: '8vw', textAlign: 'center' }}>Upcoming Games</Typography>\n            {predictions.map((match) => {\n                return (\n                    <Card className={classes.matchCard}>\n                        <Box className={classes.match}>\n                            <Box className={classes.predictionHistoryTeamName}>\n                                <Team name={match.team_one.name} emoji={match.team_one.emoji} />\n                            </Box>\n                            <Box style={{ marginTop: '7vw' }}>\n                                {match.match.match_date + dateToOrdinal(parseInt(match.match.match_date)) + \" - \" + match.match.kick_off_time}\n                            </Box>\n                            <Box className={classes.predictionHistoryTeamName}>\n                                <Team name={match.team_two.name} emoji={match.team_two.emoji} />\n                            </Box>\n                        </Box>\n                        <b>Users Missing Predictions</b><br />\n                        {match.users.map(user => { return <>{user.name}<br /></> })}\n                        <br />\n                    </Card>\n                )\n            })}\n        </>\n    )\n\n}\n","import { Container, makeStyles, Typography } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport BottomNav from \"../misc/BottomNav\";\nimport Header from \"../misc/Header\";\nimport { getJWT, resolveEndpoint, isAdminCheck } from \"../utils/Utils\";\nimport LiveGame from \"./LiveGame\";\nimport MissingPredictions from \"./MissingPredictions\";\nimport { IMatch } from \"./Predictions\";\n\nconst useStyles = makeStyles({\n    liveGames: {\n        fontSize: '8vw',\n        marginTop: '19vw',\n        marginBottom: '5vw'\n    },\n    liveGamesText: {\n        fontSize: '8vw',\n        textAlign: 'center'\n    }, missingGames: {\n        marginBottom: '19vw'\n    },\n})\n\nexport default function AdminPage() {\n    const classes = useStyles()\n    const [matches, setMatches] = useState<IMatch[]>([])\n    const [invalidResponse, setInvalidResponse] = useState<boolean>(false)\n    const [isAdmin, setIsAdmin] = useState<boolean>(true)\n\n    useEffect(() => {\n        getMatches()\n        checkAdmin()\n    }, [setMatches, setIsAdmin])\n\n    function checkAdmin() {\n        fetch(resolveEndpoint('is-admin'), {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authenticate\": getJWT()\n            }\n        })\n            .then(res => res.json())\n            .then(result => {\n                if (!result.success) {\n                    setIsAdmin(false)\n                }\n            });\n    }\n\n    function getMatches() {\n        fetch(resolveEndpoint('match/in-progress'), {\n            method: 'GET',\n            headers: {\n                'Authenticate': getJWT()\n            }\n        }).then(res => res.json()).then(res => {\n            if (res.success) {\n                setMatches(res.matches);\n            } else {\n                setInvalidResponse(true);\n            }\n        });\n\n    }\n\n    if (invalidResponse) {\n        return (\n            <Redirect to={'/'} />\n        )\n    }\n\n    if (!isAdmin) {\n        return (\n            <Redirect to={'/home'} />\n        )\n    }\n\n    return (\n        <>\n            <Header />\n            <Container className={classes.liveGames}>\n                {matches.length > 0 ? <Typography className={classes.liveGamesText}>Live Games</Typography> : <></>}\n                {matches.map(element => {\n                    return <LiveGame {...element} />\n                })}\n            </Container>\n            <Container className={classes.missingGames}>\n                <MissingPredictions />\n            </Container>\n            <BottomNav value={'/admin'} admin={isAdminCheck()} />\n        </>\n    )\n}\n","import { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles({\n  table: {\n    padding: '5px'\n  },\n});\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: '#1caac9',\n    color: 'white',\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\n\ninterface ILeaderBoardRecord {\n  name: String,\n  correct_result: boolean,\n  correct_score: boolean,\n  predicted_score: string,\n  score?: number\n}\n\ninterface ISingleGameLeaderboardProps {\n    entries: ILeaderBoardRecord[]\n}\n\nexport default function SingleGameLeaderBoard(props: ISingleGameLeaderboardProps) {\n  const classes = useStyles();\n\n  function getRows() {\n    return (props.entries.map((row, index) => (\n      <TableRow key={index} >\n        <TableCell component=\"th\" scope=\"row\">\n          {row.name.split(' ')[0]}\n        </TableCell>\n        <TableCell>{row.predicted_score}</TableCell>\n        <TableCell>{row.correct_result ? 'Y' : 'N'}</TableCell>\n        <TableCell>{row.correct_score ? 'Y' : 'N'}</TableCell>\n        <TableCell>{row.score}</TableCell>\n      </TableRow>\n    )))\n  }\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} size=\"small\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell>Player</StyledTableCell>\n            <StyledTableCell>Pred.</StyledTableCell>\n            <StyledTableCell>R</StyledTableCell>\n            <StyledTableCell>S</StyledTableCell>\n            <StyledTableCell><b>P</b></StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {getRows()}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import { Box, Card, Container, Grid, OutlinedInput } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport SingleGameLeaderBoard from \"../leaderboard/SingleGameLeaderboard\";\nimport HeaderReturn from \"../misc/HeaderReturn\";\nimport { SUCCESS } from \"../utils/Constants\";\nimport { calculateScore, getJWT, resolveEndpoint, gotResultCorrect, gotScoreCorrect } from \"../utils/Utils\";\nimport { useStyles } from \"./Game\";\nimport { IMatchDetails, IPrediction, ITeam } from \"./Predictions\";\nimport Team from \"./Team\";\n\ninterface IParams {\n    matchid?: string\n}\n\ninterface IAllUserPredictionGameData {\n    team_one: ITeam,\n    team_two: ITeam,\n    match: IMatchDetails,\n    predictions: IPrediction[],\n    in_progress?: boolean\n}\n\nconst emptyData: IAllUserPredictionGameData = {\n    team_one: {\n        name: 'Team 1',\n        emoji: ''\n    }, \n    team_two: {\n        name: 'Team 2',\n        emoji: ''\n    },\n    match: {\n        is_knockout: false,\n        team_one_goals: '0',\n        team_two_goals: '0',\n        matchid: -1,\n        match_date: '01/01/2020',\n        kick_off_time: '00:00:00'\n    },\n    predictions: [{\n        team_one_pred: '0',\n        team_two_pred: '0',\n        predictionid: '-1',\n    }]\n}\n\nexport default function MatchPredictions() {\n    const classes = useStyles()\n    const [matchData, setMatchData] = useState<IAllUserPredictionGameData>(emptyData)\n\n    const params = useParams<IParams>()\n\n    useEffect(() => {\n        if (params.matchid) {\n            getPredictionData(params.matchid)\n        }\n    }, [params.matchid])\n\n    function getPredictionData(matchid: string) {\n        fetch(resolveEndpoint('match/predictions?matchid=' + matchid), {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Authenticate': getJWT()\n            }\n        })\n        .then(res => res.json())\n        .then(res => {\n            console.log(res)\n            if (res[SUCCESS]) {\n                setMatchData({...res})\n            }\n        })\n    }\n\n    function renderScore() {\n        return (\n            <Grid container spacing={1}>\n                <Grid item xs={6}>\n                    <OutlinedInput\n                        className={classes.fixedTeaminputPreds}\n                        id=\"outlined-basic\"\n                        type=\"number\"\n                        value={matchData.match.team_one_goals}\n                        readOnly\n                    />\n                </Grid>\n                <Grid item xs={6}>\n                    <OutlinedInput\n                        className={classes.fixedTeaminputPreds}\n                        id=\"outlined-basic\"\n                        type=\"number\"\n                        value={matchData.match.team_two_goals}\n                        readOnly\n                    />\n                </Grid>\n            </Grid>\n        )\n    }\n\n    function getFormattedMatchData() {\n        return matchData.predictions.map(element => {\n            return { \n                ...element, \n                predicted_score: (element.team_one_pred + '-' + element.team_two_pred),\n                name: element.name ? element.name : '',\n                correct_result: gotResultCorrect(element.team_one_pred, element.team_two_pred, parseInt(matchData.match.team_one_goals), parseInt(matchData.match.team_two_goals)),\n                correct_score: gotScoreCorrect(element.team_one_pred, element.team_two_pred, parseInt(matchData.match.team_one_goals), parseInt(matchData.match.team_two_goals)),\n                score: calculateScore(element.team_one_pred, element.team_two_pred, parseInt(matchData.match.team_one_goals), parseInt(matchData.match.team_two_goals))\n            }})\n    }\n    \n    return (\n        <>\n            <HeaderReturn/>\n            <Container className={classes.allPredictionContainer}>\n            <Card className={classes.matchCard}>\n            <Box className={classes.match}>\n                <Box className={classes.predictionHistoryTeamName}>\n                    <Team name={matchData.team_one.name} emoji={matchData.team_one.emoji} />\n                </Box>\n                {renderScore()}\n                <Box className={classes.predictionHistoryTeamName}>\n                    <Team name={matchData.team_two.name} emoji={matchData.team_two.emoji} />\n                </Box>\n            </Box>\n            </Card>\n            <SingleGameLeaderBoard entries={getFormattedMatchData()}/>\n            </Container>\n        </>\n    )\n}\n","import { HashRouter as Router, Route } from 'react-router-dom'\nimport SignUp from './authentication/SignUp'\nimport SignIn from './authentication/SignIn'\nimport PasswordReset from './authentication/PasswordReset'\nimport LeaderboardPage from './leaderboard/LeaderboardPage'\nimport Prediction from './predictions/Predictions'\nimport Homepage from './homepage/Homepage'\nimport History from './predictions/History'\nimport AdminPage from './predictions/Admin'\nimport MatchPredictions from './predictions/MatchPredictions'\n\n\nexport default function App() {\n    return (\n        <Router>\n            <Route path=\"/\" exact component={SignIn} />\n            <Route path=\"/signup\" exact component={SignUp} />\n            <Route path=\"/standings\" exact component={LeaderboardPage} />\n            <Route path=\"/predict\" exact component={Prediction} />\n            <Route path=\"/home\" exact component={Homepage} />\n            <Route path=\"/history/:userid\" exact component={History} />\n            <Route path=\"/history\" exact component={History} />\n            <Route path=\"/admin\" exact component={AdminPage} />\n            <Route path=\"/reset\" exact component={PasswordReset} />\n            <Route path=\"/match/:matchid\" exact component={MatchPredictions} />\n        </Router>\n    )\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorkerRegistration'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\nserviceWorker.register()"],"sourceRoot":""}