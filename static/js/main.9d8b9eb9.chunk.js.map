{"version":3,"sources":["utils/Constants.ts","utils/Utils.ts","authentication/SignUp.tsx","authentication/SignIn.tsx","leaderboard/Leaderboard.tsx","img/logo.svg","misc/Header.tsx","misc/BottomNav.tsx","leaderboard/LeaderboardPage.tsx","predictions/Team.tsx","predictions/Game.tsx","predictions/Predictions.tsx","homepage/Homepage.tsx","predictions/FixedGame.tsx","predictions/History.tsx","predictions/LiveGame.tsx","predictions/Admin.tsx","App.js","reportWebVitals.js","index.js"],"names":["PROXY","isTokenValid","jwt","getJWT","fetch","method","headers","then","res","json","success","goTo","endpoint","parts","document","cookie","split","length","pop","shift","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","SignUp","classes","useState","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","isEmailValid","setIsEmailValid","successfulSingUp","setSuccessfulSignup","validToken","setValidToken","submitForm","test","String","toLowerCase","validateEmail","body","JSON","stringify","name","result","alert","useEffect","valid","to","Container","component","maxWidth","CssBaseline","className","Avatar","Grid","container","item","xs","sm","TextField","autoComplete","required","fullWidth","id","label","autoFocus","onChange","input","target","value","type","error","Button","onClick","render","history","push","Box","mt","SignIn","handleLogin","table","padding","StyledTableCell","withStyles","head","common","white","fontSize","TableCell","LeaderBoard","isLive","setIsLive","leaderboardData","setLeaderboardData","console","log","leaderboard","matches","TableContainer","Paper","Table","aria-label","TableHead","TableRow","TableBody","map","row","index","scope","style","paddingRight","correct_results","correct_scores","score","logo","maxHeight","headerBar","marginBottom","position","top","zIndex","Header","src","alt","root","bottom","left","BottomNav","props","isAdmin","setIsAdmin","BottomNavigation","ignored","newValue","showLabels","BottomNavigationAction","icon","paddingTop","LeaderboardPage","Fragment","team","textAlign","teamEmoji","teamName","Team","emoji","match","justifyContent","game","teaminput","height","dash","date","verticalAlign","matchCard","buttonBox","button","Game","team1score","setTeam1Score","teamTwoScore","setTeamTwoScore","isEditing","setIsEditing","hasPrediction","team_one_pred","team_two_pred","Card","team_one","OutlinedInput","prediction","renderPredictedScore","team_two","match_date","kick_off_time","substring","scoreOne","parseInt","scoreTwo","isNaN","matchid","penalty_winners","callback","handleClick","upcomingGames","gameContainer","Prediction","setMatches","invalidResponse","setInvalidResponse","getMatches","element","homepage","createMuiTheme","typography","fontFamily","join","Homepage","ThemeProvider","FixedGame","History","endButton","LiveGame","hasScore","team_one_goals","team_two_goals","renderCurrentScore","window","confirm","liveGames","AdminPage","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9d8b9eb9.chunk.js","sourcesContent":["export const PROXY = 'https://euro2020-back-end.herokuapp.com/'\nexport const SUCCESS = 'success'","import { PROXY } from './Constants'\n\nexport function isTokenValid(): Promise<boolean> {\n    const jwt = getJWT();\n    return fetch(PROXY + \"validateToken\", {\n        method: 'GET',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'Authenticate': jwt\n        }\n    }).then(res => res.json()).then(res => {\n        return res.success\n    })\n}\n\nexport function validateEmail(email: String): boolean {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n}\n\nexport function goTo(endpoint: string): string {\n    return PROXY + endpoint\n}\n\nexport function setJWT(jwt: string) {\n    document.cookie = \"jwt=\" + jwt;\n}\n\nexport function getJWT(): string {\n    const value = `; ${document.cookie}`;\n    const parts = value.split(`; ${'jwt'}=`);\n    if (parts.length === 2) {\n        const jwt = parts.pop()!.split(';').shift()\n        return (typeof jwt === 'undefined') ? '' : jwt;\n    }\n    return '';\n}\n\nexport function deleteJWT() {\n    document.cookie = '';\n}","import React, { useEffect, useState } from 'react';\nimport { Redirect, Route } from 'react-router-dom'\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { goTo, isTokenValid, validateEmail } from '../utils/Utils';\nimport { SUCCESS } from '../utils/Constants';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignUp() {\n  const classes = useStyles();\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [isEmailValid, setIsEmailValid] = useState(true);\n  const [successfulSingUp, setSuccessfulSignup] = useState(false);\n  const [validToken, setValidToken] = useState(false);\n\n  useEffect(() => {\n    isTokenValid().then(valid => {\n      if (valid) {\n        setValidToken(true)\n      }\n    })\n  }, [setValidToken])\n\n  function submitForm() {\n    if (!validateEmail(email)) {\n      setIsEmailValid(false)\n      return\n    }\n\n    fetch(goTo('signup'), {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email: email,\n        password: password,\n        name: firstName + ' ' + lastName\n      })\n    })\n      .then(res => res.json())\n      .then(result => {\n        if (result[SUCCESS] === false) {\n          alert('error whilst signing up :(')\n        } else {\n          setSuccessfulSignup(true)\n        }\n      });\n  }\n\n  if (validToken) {\n    return (\n      <Redirect to={'/home'} />\n    )\n  }\n  else if (successfulSingUp) {\n    return (\n      <Redirect to={'/'} />\n    )\n  } else {\n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <div className={classes.form}>\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  autoComplete=\"fname\"\n                  name=\"firstName\"\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"firstName\"\n                  label=\"First Name\"\n                  autoFocus\n                  onChange={(input) => setFirstName(input.target.value)}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"lastName\"\n                  label=\"Last Name\"\n                  name=\"lastName\"\n                  autoComplete=\"lname\"\n                  onChange={(input) => setLastName(input.target.value)}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  type=\"email\"\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                  onChange={(input) => setEmail(input.target.value)}\n                  error={!isEmailValid}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"current-password\"\n                  onChange={(input) => setPassword(input.target.value)}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  name=\"confirmpassword\"\n                  label=\"Confirm Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"current-password\"\n                  onChange={(input) => setConfirmPassword(input.target.value)}\n                  error={password !== confirmPassword}\n                />\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={() => submitForm()}\n            >\n              Sign Up\n            </Button>\n            <Grid container>\n              <Grid item>\n                <Route render={({ history }: { history: any }) => (\n                  <Link onClick={() => { history.push('/') }} variant=\"body2\">\n                    Already have an account? Sign in\n                  </Link>\n                )} />\n              </Grid>\n            </Grid>\n          </div>\n        </div>\n        <Box mt={8}>\n          <Copyright />\n        </Box>\n      </Container>\n    );\n  }\n}","import React, { useEffect, useState } from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Link from '@material-ui/core/Link';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { goTo, isTokenValid, setJWT } from '../utils/Utils';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Ali Colver & Luke Ely\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignIn() {\n  const classes = useStyles();\n  const [email, setEmail] = useState({ value: '', error: false });\n  const [password, setPassword] = useState({ value: '', error: false });\n  const [validToken, setValidToken] = useState(false);\n\n  useEffect(() => {\n    isTokenValid().then(valid => {\n      if (valid) {\n        setValidToken(true)\n      }\n    })\n  }, [setValidToken])\n\n  const handleLogin = () => {\n    fetch(goTo('login'), {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email: email.value,\n        password: password.value\n      })\n    })\n      .then(res => res.json())\n      .then(result => {\n        if (result[\"error-message\"] === \"\") {\n          setJWT(result[\"token\"]);\n          setValidToken(true)\n        } else {\n          setPassword({ ...password, error: true });\n          setEmail({ ...email, error: true });\n        }\n      });\n  };\n\n  if (validToken) {\n    return (\n      <Redirect to={'/home'} />\n    )\n  } else {\n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <div className={classes.form}>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              type=\"email\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              onChange={(input) => setEmail({ ...email, value: input.target.value })}\n              error={email.error}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              onChange={(input) => setPassword({ ...password, value: input.target.value })}\n              error={password.error}\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={() => handleLogin()}\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item>\n                <Route render={({ history }: { history: any }) => (\n                  <Link onClick={() => { history.push('/signup') }} variant=\"body2\">\n                    {\"Don't have an account? Sign Up\"}\n                  </Link>\n                )} />\n              </Grid>\n            </Grid>\n          </div>\n        </div>\n        <Box mt={8}>\n          <Copyright />\n        </Box>\n      </Container>\n    );\n  }\n}","import React, { useState, useEffect } from 'react';\nimport { getJWT, goTo } from \"../utils/Utils\";\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\n\nconst useStyles = makeStyles({\n  table: {\n    padding: '5px'\n  },\n});\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: '#1caac9',\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\n\ninterface leaderBoardRecord {\n  name: String,\n  correct_results: number,\n  correct_scores: number,\n  score: number\n}\n\nexport default function LeaderBoard() {\n  const classes = useStyles();\n  const [isLive, setIsLive] = useState(false);\n  const [leaderboardData, setLeaderboardData] = useState<leaderBoardRecord[]>([])\n\n  useEffect(() => {\n    fetch(goTo('leaderboard'), {\n      method: 'GET'\n    }).then(res => res.json()).then(res => {\n      if (res.success) {\n        console.log(res)\n        setLeaderboardData(res.leaderboard)\n      }\n    })\n\n    fetch(goTo('match/in-progress'), {\n      method: 'GET',\n      headers: {\n          'Authenticate': getJWT()\n      }\n  }).then(res => res.json()).then(res => {\n      if (res.success) {\n          setIsLive(res.matches.length > 0);\n      }\n  });\n  }, [setLeaderboardData])\n\n\n  function renderLive() {\n    if (isLive) {\n      return <FiberManualRecordIcon style={{ color: 'green', paddingRight: '3vw' }} />\n    } else {\n      return <></>\n    }\n  }\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell>#</StyledTableCell>\n            <StyledTableCell>Player</StyledTableCell>\n            <StyledTableCell>R</StyledTableCell>\n            <StyledTableCell>S</StyledTableCell>\n            <StyledTableCell align=\"center\">Pts</StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {leaderboardData.map((row, index) => (\n            <TableRow key={index}>\n              <TableCell>{index + 1}</TableCell>\n              <TableCell component=\"th\" scope=\"row\">\n                 {renderLive()}{row.name}\n              </TableCell>\n              <TableCell>{row.correct_results}</TableCell>\n              <TableCell>{row.correct_scores}</TableCell>\n              <TableCell align=\"center\">{row.score}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}","export default __webpack_public_path__ + \"static/media/logo.b61bf1d9.svg\";","import { makeStyles } from \"@material-ui/core\";\nimport logo from '../img/logo.svg'\n\nconst useStyles = makeStyles({\n  logo: {\n    maxHeight: '15vw'\n  },\n  headerBar: {\n    maxHeight: '15vw',\n    marginBottom: '5vw',\n    position: 'fixed',\n    width: '100%',\n    backgroundColor: 'white',\n    top: 0,\n    zIndex: 10\n  }\n});\n\nexport default function Header() {\n    const classes = useStyles()\n\n    return(\n        <div className={classes.headerBar}>\n          <img className={classes.logo} src={logo} alt={'euro logo'}/>\n        </div>\n    )\n}","import { BottomNavigation, BottomNavigationAction, makeStyles } from \"@material-ui/core\";\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport HistoryIcon from '@material-ui/icons/History';\nimport SportsSoccerIcon from '@material-ui/icons/SportsSoccer';\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\nimport { useEffect, useState } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { getJWT, goTo } from \"../utils/Utils\";\n\nconst useStyles = makeStyles({\n    root: {\n        width: '100vw',\n        position: 'fixed',\n        bottom: 0,\n        left: 0\n    },\n});\n\ninterface IBottomNavProps {\n    value: string\n}\n\nexport default function BottomNav(props: IBottomNavProps) {\n    const classes = useStyles()\n    const [isAdmin, setIsAdmin] = useState(false)\n\n    useEffect(() => {\n        fetch(goTo('is-admin'), {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authenticate\": getJWT()\n            }\n        })\n            .then(res => res.json())\n            .then(result => {\n                setIsAdmin(result.success)\n            });\n    }, [setIsAdmin])\n\n    function getAdminPage() {\n        return !isAdmin ?\n            <></> :\n            <BottomNavigationAction label=\"ADMIN\" value=\"/admin\" icon={<SupervisorAccountIcon />} />\n    }\n\n    return (\n        <Route render={({ history }: { history: any }) => (\n            <BottomNavigation\n                value={props.value}\n                onChange={(ignored, newValue) => {\n                    history.push(newValue)\n                }}\n                showLabels\n                className={classes.root}\n            >\n                <BottomNavigationAction label=\"Standings\" value=\"/standings\" icon={<BarChartIcon />} />\n                <BottomNavigationAction label=\"Predict\" value=\"/home\" icon={<SportsSoccerIcon />} />\n                <BottomNavigationAction label=\"History\" value=\"/history\" icon={<HistoryIcon />} />\n                {getAdminPage()}\n            </BottomNavigation>\n        )} />\n\n    )\n}","import LeaderBoard from \"./Leaderboard\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Header from \"../misc/Header\";\nimport BottomNav from \"../misc/BottomNav\";\n\nconst useStyles = makeStyles({\n    leaderboard: {\n      padding: '5px',\n      marginTop: '50px',\n      marginBottom: '10vw',\n      paddingTop: '5vw'\n    },\n  });\n  \n\nexport default function LeaderboardPage() {\n    const classes = useStyles();\n\n    return(\n        <React.Fragment>\n          <Header/>\n            <div className={classes.leaderboard}>\n            <LeaderBoard/>                \n            </div>\n          <BottomNav value={'/standings'}/>\n        </React.Fragment>\n    )\n}","import { Box, makeStyles } from \"@material-ui/core\"\n\ninterface ITeamProps {\n    emoji: String,\n    name: String\n}\n\nconst useStyles = makeStyles({\n    team: {\n        textAlign: 'center',\n        width: '25vw'\n    },\n    teamEmoji: {\n        fontSize: '15vw'\n    },\n    teamName: {\n        fontSize: '4vw'\n    }\n})\n\nexport default function Team(props: ITeamProps) {\n    const classes = useStyles()\n\n    return (\n        <Box className={classes.team}>\n            <div className={classes.teamEmoji}>\n                {props.emoji}\n            </div>\n            <div className={classes.teamName}>\n                {props.name}\n            </div>\n        </Box>\n    )\n}","import { Box, Button, Card, makeStyles, OutlinedInput } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { SUCCESS } from \"../utils/Constants\";\nimport { getJWT, goTo } from \"../utils/Utils\";\nimport { IMatch } from \"./Predictions\";\nimport Team from \"./Team\";\n\nconst useStyles = makeStyles({\n    match: {\n        width: '80vw',\n        margin: '0 auto',\n        display: 'flex',\n        justifyContent: 'space-between',\n        marginBottom: '3vh'\n    },\n    game: {\n        width: '80vw',\n        margin: '0 auto',\n        display: 'flex',\n        justifyContent: 'space-between',\n        marginTop: '5vh',\n        position: 'relative'\n    },\n    teaminput: {\n        width: '10vw',\n        height: '8vw',\n        fontSize: '4vw',\n        marginTop: '6vw'\n    },\n    dash: {\n        fontSize: '8vw',\n        marginTop: '4vw'\n    },\n    date: {\n        fontSize: '5vw',\n        marginBottom: '1.5vh',\n        verticalAlign: 'center',\n        position: 'relative'\n    },\n    matchCard: {\n        marginBottom: '4vh',\n        textAlign: 'center'\n    },\n    buttonBox: {\n        marginBottom: '1.5vh'\n    },\n    button: {\n        backgroundColor: '#1caac9'\n    }\n})\n\ninterface IGameProps {\n    callback: () => void,\n    hasPrediction: boolean,\n    team_one_pred?: string,\n    team_two_pred?: string\n}\n\nexport default function Game(props: IMatch & IGameProps) {\n    const classes = useStyles()\n    const [team1score, setTeam1Score] = useState({ score: '', error: false });\n    const [teamTwoScore, setTeamTwoScore] = useState({ score: '', error: false });\n    const [isEditing, setIsEditing] = useState(true);\n\n    useEffect(() => {\n        setIsEditing(!props.hasPrediction)\n        if (props.hasPrediction && props.team_one_pred && props.team_two_pred) {\n            setTeam1Score({\n                error: false,\n                score: props.team_one_pred\n            })\n            setTeamTwoScore({\n                error: false,\n                score: props.team_two_pred\n            })\n        }\n    }, [props.hasPrediction, props.team_one_pred, props.team_two_pred])\n\n    function handleClick() {\n        if (!isEditing) {\n            setIsEditing(true)\n            return\n        }\n\n        const scoreOne = parseInt(team1score.score)\n        const scoreTwo = parseInt(teamTwoScore.score)\n        if (isNaN(scoreOne) || isNaN(scoreTwo)) {\n            setTeam1Score({ ...team1score, error: true })\n            setTeamTwoScore({ ...teamTwoScore, error: true })\n            return\n        }\n        setTeam1Score({ ...team1score, error: false })\n        setTeamTwoScore({ ...teamTwoScore, error: false })\n\n        fetch(goTo('prediction'), {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Authenticate': getJWT()\n            },\n            body: JSON.stringify({\n                team_one_pred: scoreOne,\n                team_two_pred: scoreTwo,\n                matchid: props.match.matchid,\n                penalty_winners: null\n            })\n        })\n            .then(res => res.json())\n            .then(result => {\n                if (!result[SUCCESS]) {\n                    alert('Error whilst sending prediction, please try again')\n                } else {\n                    props.callback()\n                    setIsEditing(false)\n                }\n            });\n    }\n\n    function renderPredictedScore() {\n        return (\n            <span className={classes.dash}>{props.prediction?.team_one_pred + '-' + props.prediction?.team_two_pred}</span>\n        )\n    }\n\n    function renderUnpredictedScore() {\n        return (\n            <>\n                <OutlinedInput\n                    className={classes.teaminput}\n                    id=\"outlined-basic\"\n                    type=\"number\"\n                    value={team1score.score}\n                    onChange={(input) => setTeam1Score({ ...team1score, score: input.target.value })}\n                    error={team1score.error} />\n                <span className={classes.dash}>-</span>\n                <OutlinedInput\n                    className={classes.teaminput}\n                    id=\"outlined-basic\"\n                    type=\"number\"\n                    value={teamTwoScore.score}\n                    onChange={(input) => setTeamTwoScore({ ...teamTwoScore, score: input.target.value })}\n                    error={teamTwoScore.error} />\n            </>\n        )\n    }\n\n    function getPredictionRender() {\n        return isEditing ? renderUnpredictedScore() : renderPredictedScore()\n    }\n\n    function getSetOrEditText(): string {\n        return isEditing ? 'Submit Prediction' : 'Edit Prediction'\n    }\n\n    function getButton() {\n        return (\n        <Box className={classes.buttonBox}>\n            <Button\n                variant='contained'\n                className={classes.button}\n                onClick={() => handleClick()}\n            >\n                {getSetOrEditText()}\n            </Button>\n        </Box>  \n    )}\n\n    return (\n        <Card className={classes.matchCard}>\n            <Box className={classes.match}>\n                <Box>\n                    <Team name={props.team_one.name} emoji={props.team_one.emoji} />\n                </Box>\n                {getPredictionRender()}\n                <Box>\n                    <Team name={props.team_two.name} emoji={props.team_two.emoji} />\n                </Box>\n            </Box>\n            <Box className={classes.date}>\n                {props.match.match_date + ' ' + props.match.kick_off_time.substring(0, props.match.kick_off_time.length - 3)}\n            </Box>\n            {getButton()}\n        </Card>\n    )\n}","import Game from \"./Game\";\nimport { Container, makeStyles, Typography } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport { getJWT, goTo } from \"../utils/Utils\";\nimport { Redirect } from \"react-router\";\n\nconst useStyles = makeStyles({\n    upcomingGames: {\n        'fontSize': '8vw'\n    },\n    gameContainer: {\n        'marginBottom': '15vw'\n    }\n})\n\nexport interface ITeam {\n    name: string,\n    emoji: string\n}\n\nexport interface IMatchDetails {\n    match_date: string,\n    kick_off_time: string,\n    is_knockout: boolean,\n    team_one_goals: string,\n    team_two_goals: string,\n    matchid: number\n}\n\nexport interface IPrediction {\n    team_one_pred: string,\n    team_two_pred: string,\n    predictionid: string\n}\n\nexport interface IMatch {\n    team_one: ITeam,\n    team_two: ITeam,\n    match: IMatchDetails,\n    hasPrediction: boolean,\n    prediction?: IPrediction\n}\n\nexport default function Prediction() {\n    const classes = useStyles()\n    const [matches, setMatches] = useState<IMatch[]>([])\n    const [invalidResponse, setInvalidResponse] = useState<boolean>(false)\n\n    useEffect(() => {\n        getMatches();\n    }, [setMatches])\n\n    if (invalidResponse) {\n        return (\n            <Redirect to={'/'} />\n        )\n    } else {\n        return (\n            <Container className={classes.gameContainer}>\n                <Typography className={classes.upcomingGames}>Upcoming Games</Typography>\n                {matches.map(element => {\n                    if (element.hasPrediction && element.prediction) {\n                        return <Game {...element} callback={getMatches} team_one_pred={element.prediction.team_one_pred} team_two_pred={element.prediction.team_two_pred} />\n                    } else {\n                        return <Game {...element} callback={getMatches} />\n                    }\n                })}\n            </Container>\n        )\n    }\n\n    function getMatches() {\n        console.log('attempting fetch')\n        fetch(goTo('prediction-required'), {\n            method: 'GET',\n            headers: {\n                'Authenticate': getJWT()\n            }\n        }).then(res => res.json()).then(res => {\n            if (res.success) {\n                setMatches(res.matches);\n            } else {\n                setInvalidResponse(true);\n            }\n        });\n    }\n}","import { Container, createMuiTheme, makeStyles, ThemeProvider } from '@material-ui/core';\nimport React from 'react';\nimport BottomNav from '../misc/BottomNav';\nimport Header from '../misc/Header';\nimport Prediction from '../predictions/Predictions';\n\nconst useStyles = makeStyles({\n  logo: {\n    maxHeight: '15vw'\n  },\n  homepage: {\n    position: 'absolute',\n    top: '19vw',\n    left: 0,\n    width: '100%',\n    marginBottom: '30vw'\n  }\n});\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: [\n      'Source Sans Pro',\n      'sans-serif',\n    ].join(','),\n  },\n});\n\nfunction Homepage() {\n  const classes = useStyles();\n    return (\n      <ThemeProvider theme={theme}>\n        <Header/>\n      <Container className={classes.homepage}>\n        <Prediction />\n      </Container>\n      <BottomNav value={'/home'}/>\n      </ThemeProvider>\n    )\n}\n\nexport default Homepage;","import { Box, Card, makeStyles } from \"@material-ui/core\";\nimport { IMatch } from \"./Predictions\";\nimport Team from \"./Team\";\n\nconst useStyles = makeStyles({\n    match: {\n        width: '80vw',\n        margin: '0 auto',\n        display: 'flex',\n        justifyContent: 'space-between',\n        marginBottom: '3vh'\n    },\n    game: {\n        width: '80vw',\n        margin: '0 auto',\n        display: 'flex',\n        justifyContent: 'space-between',\n        marginTop: '5vh',\n        position: 'relative'\n    },\n    teaminput: {\n        width: '10vw',\n        height: '8vw',\n        fontSize: '4vw',\n        marginTop: '6vw'\n    },\n    dash: {\n        fontSize: '8vw',\n        marginTop: '4vw'\n    },\n    date: {\n        fontSize: '5vw',\n        marginBottom: '1.5vh',\n        verticalAlign: 'center',\n        position: 'relative'\n    },\n    matchCard: {\n        marginBottom: '4vh',\n        textAlign: 'center'\n    }\n})\n\ninterface IGameProps {\n    hasPrediction: boolean,\n    team_one_pred?: string,\n    team_two_pred?: string\n}\n\nexport default function FixedGame(props: IMatch & IGameProps) {\n    const classes = useStyles()\n\n    function renderPredictedScore() {\n        return (\n            <span className={classes.dash}>{props.prediction?.team_one_pred + '-' + props.prediction?.team_two_pred}</span>\n        )\n    }\n\n    return (\n        <Card className={classes.matchCard}>\n            <Box className={classes.match}>\n                <Box>\n                    <Team name={props.team_one.name} emoji={props.team_one.emoji} />\n                </Box>\n                {renderPredictedScore()}\n                <Box>\n                    <Team name={props.team_two.name} emoji={props.team_two.emoji} />\n                </Box>\n            </Box>\n            <Box className={classes.date}>\n                {props.match.match_date + ' ' + props.match.kick_off_time.substring(0, props.match.kick_off_time.length - 3)}\n            </Box>\n        </Card>\n    )\n}","import { Container, makeStyles, Typography } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport BottomNav from \"../misc/BottomNav\";\nimport Header from \"../misc/Header\";\nimport { goTo, getJWT } from \"../utils/Utils\";\nimport FixedGame from \"./FixedGame\";\nimport { IMatch } from \"./Predictions\";\n\nconst useStyles = makeStyles({\n    upcomingGames: {\n        fontSize: '8vw',\n        marginTop: '19vw'\n    }\n})\n\nexport default function History() {\n    const classes = useStyles()\n    const [matches, setMatches] = useState<IMatch[]>([])\n    const [invalidResponse, setInvalidResponse] = useState<boolean>(false)\n\n    useEffect(() => {\n        getMatches();\n    }, [setMatches])\n\n    if (invalidResponse) {\n        return (\n            <Redirect to={'/'} />\n        )\n    } else {\n        return (\n            <>\n            <Header/>\n            <Container>\n                <Typography className={classes.upcomingGames}>Your History</Typography>\n                {matches.map(element => {\n                        return <FixedGame {...element}/>\n                })}\n            </Container>\n            <BottomNav value={'/history'}/>\n            </>\n        )\n    }\n\n    function getMatches() {\n        console.log('attempting fetch')\n        fetch(goTo('match/ended'), {\n            method: 'GET',\n            headers: {\n                'Authenticate': getJWT()\n            }\n        }).then(res => res.json()).then(res => {\n            if (res.success) {\n                setMatches(res.matches);\n            } else {\n                setInvalidResponse(true);\n            }\n        });\n    }\n}","import { Box, Button, Card, makeStyles, OutlinedInput } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { SUCCESS } from \"../utils/Constants\";\nimport { getJWT, goTo } from \"../utils/Utils\";\nimport { IMatch } from \"./Predictions\";\nimport Team from \"./Team\";\n\nconst useStyles = makeStyles({\n    match: {\n        width: '80vw',\n        margin: '0 auto',\n        display: 'flex',\n        justifyContent: 'space-between',\n        marginBottom: '3vh'\n    },\n    game: {\n        width: '80vw',\n        margin: '0 auto',\n        display: 'flex',\n        justifyContent: 'space-between',\n        marginTop: '5vh',\n        position: 'relative'\n    },\n    teaminput: {\n        width: '10vw',\n        height: '8vw',\n        fontSize: '4vw',\n        marginTop: '6vw'\n    },\n    dash: {\n        fontSize: '8vw',\n        marginTop: '4vw'\n    },\n    date: {\n        fontSize: '5vw',\n        marginBottom: '1.5vh',\n        verticalAlign: 'center',\n        position: 'relative'\n    },\n    matchCard: {\n        marginBottom: '4vh',\n        textAlign: 'center'\n    },\n    buttonBox: {\n        marginBottom: '1.5vh'\n    },\n    button: {\n        backgroundColor: '#1caac9'\n    },\n    endButton: {\n        backgroundColor: '#1c4c87'\n    }\n})\n\ninterface IGameProps {\n    callback: () => void\n}\n\nexport default function LiveGame(props: IMatch & IGameProps) {\n    const classes = useStyles()\n    const [team1score, setTeam1Score] = useState({ score: '', error: false });\n    const [teamTwoScore, setTeamTwoScore] = useState({ score: '', error: false });\n    const [isEditing, setIsEditing] = useState(true);\n\n    useEffect(() => {\n        const hasScore = props.match.team_one_goals && props.match.team_two_goals\n        setIsEditing(!hasScore)\n        if (hasScore) {\n            setTeam1Score({\n                error: false,\n                score: props.match.team_one_goals\n            })\n            setTeamTwoScore({\n                error: false,\n                score: props.match.team_two_goals\n            })\n        }\n    }, [props.hasPrediction, props.match.team_one_goals, props.match.team_two_goals])\n\n    function handleClick() {\n        if (!isEditing) {\n            setIsEditing(true)\n            return\n        }\n\n        const scoreOne = parseInt(team1score.score)\n        const scoreTwo = parseInt(teamTwoScore.score)\n        if (isNaN(scoreOne) || isNaN(scoreTwo)) {\n            setTeam1Score({ ...team1score, error: true })\n            setTeamTwoScore({ ...teamTwoScore, error: true })\n            return\n        }\n        setTeam1Score({ ...team1score, error: false })\n        setTeamTwoScore({ ...teamTwoScore, error: false })\n\n        fetch(goTo('score'), {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Authenticate': getJWT()\n            },\n            body: JSON.stringify({\n                team_one_goals: scoreOne,\n                team_two_goals: scoreTwo,\n                matchid: props.match.matchid\n            })\n        })\n            .then(res => res.json())\n            .then(result => {\n                if (!result[SUCCESS]) {\n                    alert('Error whilst updating scores, please try again')\n                } else {\n                    props.callback()\n                    setIsEditing(false)\n                }\n            });\n    }\n\n    function endGame() {\n        if (window.confirm('Are you sure the match is finished?')) {\n            fetch(goTo('match/end'), {\n                method: \"PUT\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    'Authenticate': getJWT()\n                },\n                body: JSON.stringify({\n                    matchid: props.match.matchid\n                })\n            })\n                .then(res => res.json())\n                .then(result => {\n                    if (!result[SUCCESS]) {\n                        alert('Error whilst updating scores, please try again')\n                    }\n                });\n        }\n    }\n\n    function renderCurrentScore() {\n        return (\n            <span className={classes.dash}>{props.prediction?.team_one_pred + '-' + props.prediction?.team_two_pred}</span>\n        )\n    }\n\n    function renderEditScore() {\n        return (\n            <>\n                <OutlinedInput\n                    className={classes.teaminput}\n                    id=\"outlined-basic\"\n                    type=\"number\"\n                    value={team1score.score}\n                    onChange={(input) => setTeam1Score({ ...team1score, score: input.target.value })}\n                    error={team1score.error} />\n                <span className={classes.dash}>-</span>\n                <OutlinedInput\n                    className={classes.teaminput}\n                    id=\"outlined-basic\"\n                    type=\"number\"\n                    value={teamTwoScore.score}\n                    onChange={(input) => setTeamTwoScore({ ...teamTwoScore, score: input.target.value })}\n                    error={teamTwoScore.error} />\n            </>\n        )\n    }\n\n    function getPredictionRender() {\n        return isEditing ? renderEditScore() : renderCurrentScore()\n    }\n\n    function getSetOrEditText(): string {\n        return isEditing ? 'Submit Score' : 'Edit Score'\n    }\n\n    function getButton() {\n        return (\n        <Box className={classes.buttonBox}>\n            <Button\n                variant='contained'\n                className={classes.button}\n                onClick={() => handleClick()}\n            >\n                {getSetOrEditText()}\n            </Button>\n        </Box>  \n    )}\n\n    return (\n        <Card className={classes.matchCard}>\n            <Box className={classes.match}>\n                <Box>\n                    <Team name={props.team_one.name} emoji={props.team_one.emoji} />\n                </Box>\n                {getPredictionRender()}\n                <Box>\n                    <Team name={props.team_two.name} emoji={props.team_two.emoji} />\n                </Box>\n            </Box>\n            <Box className={classes.date}>\n                {props.match.match_date + ' ' + props.match.kick_off_time}\n            </Box>\n            {getButton()}\n            <Button\n                variant='contained'\n                className={classes.endButton}\n                onClick={() => endGame()}>\n                End Game\n            </Button>\n        </Card>\n    )\n}","import { Container, makeStyles, Typography } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport BottomNav from \"../misc/BottomNav\";\nimport Header from \"../misc/Header\";\nimport { getJWT, goTo } from \"../utils/Utils\";\nimport LiveGame from \"./LiveGame\";\nimport { IMatch } from \"./Predictions\";\n\nconst useStyles = makeStyles({\n    liveGames: {\n        fontSize: '8vw',\n        position: 'absolute',\n        top: '19vw',\n        width: '90%',\n        left: '5%'\n    }\n})\n\nexport default function AdminPage() {\n    const classes = useStyles()\n    const [matches, setMatches] = useState<IMatch[]>([])\n    const [invalidResponse, setInvalidResponse] = useState<boolean>(false)\n    const [isAdmin, setIsAdmin] = useState<boolean>(true)\n\n    useEffect(() => {\n        getMatches()\n        checkAdmin()\n    }, [setMatches, setIsAdmin])\n\n    function checkAdmin() {\n        fetch(goTo('is-admin'), {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authenticate\": getJWT()\n            }\n        })\n            .then(res => res.json())\n            .then(result => {\n                if (!result.success) {\n                    setIsAdmin(false)\n                }\n            });\n    }\n\n    function getMatches() {\n        fetch(goTo('match/in-progress'), {\n            method: 'GET',\n            headers: {\n                'Authenticate': getJWT()\n            }\n        }).then(res => res.json()).then(res => {\n            if (res.success) {\n                setMatches(res.matches);\n            } else {\n                setInvalidResponse(true);\n            }\n        });\n\n    }\n\n\n    if (invalidResponse) {\n        return (\n            <Redirect to={'/'} />\n        )\n    }\n\n    if (!isAdmin) {\n        return (\n            <Redirect to={'/home'} />\n        )\n    }\n\n    return (\n        <>\n            <Header />\n            <Container className={classes.liveGames}>\n                <Typography>Live Games</Typography>\n                {matches.map(element => {\n                    return <LiveGame {...element} callback={getMatches} />\n                })}\n            </Container>\n            <BottomNav value={'/admin'} />\n        </>\n    )\n}\n","import { HashRouter as Router, Route } from 'react-router-dom'\nimport SignUp from './authentication/SignUp'\nimport SignIn from './authentication/SignIn'\nimport LeaderboardPage from './leaderboard/LeaderboardPage'\nimport Prediction from './predictions/Predictions'\nimport Homepage from './homepage/Homepage'\nimport History from './predictions/History'\nimport AdminPage from './predictions/Admin'\n\nexport default function App() {\n    return (\n        <Router>\n            <Route path=\"/\" exact component={SignIn}/>\n            <Route path=\"/signup\" exact component={SignUp}/>\n            <Route path=\"/standings\" exact component={LeaderboardPage}/>\n            <Route path=\"/predict\" exact component={Prediction}/>\n            <Route path=\"/home\" exact component={Homepage}/>\n            <Route path=\"/history\" exact component={History}/>\n            <Route path=\"/admin\" exact component={AdminPage}/>\n        </Router>\n    )\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}